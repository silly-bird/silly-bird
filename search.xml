<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java商城项目（六）——订单与支付]]></title>
    <url>%2F2019%2F06%2F20%2Festoresix%2F</url>
    <content type="text"><![CDATA[前台页面 /estore/WebRoot/orders_detail.jsp /estore/WebRoot/orders.jsp /estore/WebRoot/orders_submit.jsp /estore/WebRoot/pay_success.jsp entityOrders.javapackage xyz.ljcn.entity; import java.util.Date; import java.util.List; public class Orders { private String id; // 订单编号 private Integer uid; private Double totalprice; private String address; private Integer status; // 1:待付款 2：已付款 3：已过期 private Date createtime; // 订单 -- 订单明细 1：n 因此可以在订单对象中添加订单明细的集合 private List&lt;OrdersItem&gt; list; public List&lt;OrdersItem&gt; getList() { return list; } public void setList(List&lt;OrdersItem&gt; list) { this.list = list; } public String getId() { return id; } public void setId(String id) { this.id = id; } public Integer getUid() { return uid; } public void setUid(Integer uid) { this.uid = uid; } public Double getTotalprice() { return totalprice; } public void setTotalprice(Double totalprice) { this.totalprice = totalprice; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public Integer getStatus() { return status; } public void setStatus(Integer status) { this.status = status; } public Date getCreatetime() { return createtime; } public void setCreatetime(Date createtime) { this.createtime = createtime; } @Override public String toString() { return &quot;Orders [id=&quot; + id + &quot;, uid=&quot; + uid + &quot;, totalprice=&quot; + totalprice + &quot;, address=&quot; + address + &quot;, status=&quot; + status + &quot;, createtime=&quot; + createtime + &quot;, list=&quot; + list + &quot;]&quot;; } public Orders() { super(); } public Orders(String id, Integer uid, Double totalprice, String address, Integer status, Date createtime) { super(); this.id = id; this.uid = uid; this.totalprice = totalprice; this.address = address; this.status = status; this.createtime = createtime; } } OrdersItempackage xyz.ljcn.entity; public class OrdersItem { private String oid; private Integer gid; private Integer buynum; // 订单明细和商品之间是 1:1关系，因此可以在订单明细对象中添加商品对象 private Goods goods; public Goods getGoods() { return goods; } public void setGoods(Goods goods) { this.goods = goods; } public OrdersItem() { super(); } public OrdersItem(String oid, Integer gid, Integer buynum) { super(); this.oid = oid; this.gid = gid; this.buynum = buynum; } public String getOid() { return oid; } public void setOid(String oid) { this.oid = oid; } public Integer getGid() { return gid; } public void setGid(Integer gid) { this.gid = gid; } public Integer getBuynum() { return buynum; } public void setBuynum(Integer buynum) { this.buynum = buynum; } @Override public String toString() { return &quot;OrdersItem [oid=&quot; + oid + &quot;, gid=&quot; + gid + &quot;, buynum=&quot; + buynum + &quot;, goods=&quot; + goods + &quot;]&quot;; } } servletOrdersServletpackage xyz.ljcn.servlet; import java.io.IOException; import java.util.HashMap; import java.util.List; import java.util.Map; import java.util.UUID; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.apache.commons.dbutils.QueryRunner; import org.apache.commons.dbutils.handlers.MapListHandler; import org.apache.commons.lang3.StringUtils; import com.github.wxpay.sdk.MyConfig; import com.github.wxpay.sdk.WXPay; import com.google.gson.Gson; import redis.clients.jedis.Jedis; import xyz.ljcn.constants.Constants; import xyz.ljcn.entity.Cart; import xyz.ljcn.entity.Orders; import xyz.ljcn.entity.User; import xyz.ljcn.service.CartService; import xyz.ljcn.service.OrdersService; import xyz.ljcn.service.Impl.OrdersServiceProxy; import xyz.ljcn.utils.BeanFactory; import xyz.ljcn.utils.JDBCUtils; import xyz.ljcn.utils.JedisUtils; @SuppressWarnings(&quot;all&quot;) @WebServlet(&quot;/orders&quot;) public class OrdersServlet extends BaseServlet { CartService cartService = BeanFactory.getBean(CartService.class); //OrdersService service = BeanFactory.getBean(OrdersService.class); // 使用代理类 OrdersService service = OrdersServiceProxy.createOrdersServiceProxy(); public void getStatus(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { WXPay wxpay = null; try { wxpay = new WXPay(); Map&lt;String, String&gt; data = new HashMap&lt;String, String&gt;(); String oid = req.getParameter(&quot;id&quot;); data.put(&quot;out_trade_no&quot;, oid); Map&lt;String, String&gt; result = wxpay.orderQuery(data); // 获取交易状态 String trade_state = result.get(&quot;trade_state&quot;); if ( &quot;SUCCESS&quot;.equalsIgnoreCase(trade_state) ) { // 修改订单状态为已支付 Integer uid = user.getId(); service.changeStatus(oid, uid, Constants.STATUS_ORDER.PAY); } resp.getWriter().write(trade_state); } catch (Exception e1) { e1.printStackTrace(); } } else { resp.getWriter().write(&quot;nologin&quot;); } } public void getPayUrl(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { // 订单id String id = req.getParameter(&quot;id&quot;); try { Orders orders = service.get(id, user.getId()); // 计算价格总共多少分 Double totalprice = orders.getTotalprice() * 100; String total_fee = totalprice.intValue() + &quot;&quot;; WXPay wxpay = new WXPay(); Map&lt;String, String&gt; data = new HashMap&lt;String, String&gt;(); data.put(&quot;body&quot;, &quot;xxx-扫码支付中心&quot;);//微信支付实现参照后面的博客 data.put(&quot;out_trade_no&quot;, id); //data.put(&quot;device_info&quot;, &quot;&quot;); //data.put(&quot;fee_type&quot;, &quot;CNY&quot;); data.put(&quot;total_fee&quot;, total_fee); data.put(&quot;spbill_create_ip&quot;, &quot;127.0.0.1&quot;); data.put(&quot;notify_url&quot;, &quot;http://www.example.com/wxpay/notify&quot;); data.put(&quot;trade_type&quot;, &quot;NATIVE&quot;); // 此处指定为扫码支付 //data.put(&quot;product_id&quot;, &quot;12&quot;); Map&lt;String, String&gt; result = wxpay.unifiedOrder(data); String code_url = result.get(&quot;code_url&quot;); resp.getWriter().write(code_url); } catch (Exception e) { e.printStackTrace(); } } } public void detail(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { // 订单号 String oid = req.getParameter(&quot;id&quot;); Integer uid = user.getId(); // 为了保证安全性，在对用户数据进行操作时，需要把用户的id也作为sql的条件 Orders orders = service.get(oid, uid); req.setAttribute(&quot;orders&quot;, orders); req.getRequestDispatcher(&quot;/orders_detail.jsp&quot;).forward(req, resp); } } public void cancel(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { // 订单号 String oid = req.getParameter(&quot;id&quot;); Integer uid = user.getId(); // 为了保证安全性，在对用户数据进行操作时，需要把用户的id也作为sql的条件 service.cancel(oid, uid); } } public void query(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { List&lt;Orders&gt; oList = service.query(user.getId()); req.setAttribute(&quot;oList&quot;, oList); req.getRequestDispatcher(&quot;/orders.jsp&quot;).forward(req, resp); } } public void addOrders(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 判断是否登录 User user = isLogin(req, resp); if ( user != null ) { // 获取收货地址信息 String pp = req.getParameter(&quot;pp&quot;); String cc = req.getParameter(&quot;cc&quot;); String dd = req.getParameter(&quot;dd&quot;); String detailAddress = req.getParameter(&quot;detailAddress&quot;); String zipcode = req.getParameter(&quot;zipcode&quot;); String name = req.getParameter(&quot;name&quot;); String tel = req.getParameter(&quot;tel&quot;); String address = pp + cc + dd + &quot; &quot; + detailAddress + &quot; 收件人：&quot; + name + &quot; 手机号：&quot; + tel; Integer uid = user.getId(); service.addOrders(uid, address); // 跳转到查询订单列表页面 resp.sendRedirect(req.getContextPath() + &quot;/orders?method=query&quot;); } } public void loadSSX(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { try { // 将省市县的数据保存到redis缓存中，请求地址作为key String uri = req.getRequestURI(); // uri中不包含请求参数 // 获取请求参数 String queryString = req.getQueryString(); if ( StringUtils.isNotBlank(queryString) ) { uri += &quot;?&quot; + queryString; } Jedis j = JedisUtils.getJedis(); String json = j.get(uri); if ( StringUtils.isBlank(json) ) { String pid = req.getParameter(&quot;pid&quot;); QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from `province_city_district` where pid=?&quot;; List&lt;Map&lt;String, Object&gt;&gt; listMap = qr.query(sql, new MapListHandler(), pid); Gson gson = new Gson(); json = gson.toJson(listMap); j.set(uri, json); } resp.getWriter().write(json); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } public void toOrders(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { User user = isLogin(req, resp); if ( user != null ) { Integer uid = user.getId(); Cart cart = new Cart(); cart.setUid(uid); List&lt;Cart&gt; cList = cartService.queryWithGoods(cart); req.setAttribute(&quot;cList&quot;, cList); req.getRequestDispatcher(&quot;/orders_submit.jsp&quot;).forward(req, resp); } } } OrdersServicepackage xyz.ljcn.service; import java.util.List; import xyz.ljcn.entity.Orders; public interface OrdersService { void addOrders(Integer uid, String address); List&lt;Orders&gt; query(Integer id); void cancel(String oid, Integer uid); Orders get(String oid, Integer uid); void changeStatus(String oid, Integer uid, int pay); } OrdersServiceImplpackage xyz.ljcn.service.Impl; import java.util.ArrayList; import java.util.Date; import java.util.List; import xyz.ljcn.constants.Constants; import xyz.ljcn.dao.CartDAO; import xyz.ljcn.dao.GoodsDAO; import xyz.ljcn.dao.OrdersDAO; import xyz.ljcn.entity.Cart; import xyz.ljcn.entity.Goods; import xyz.ljcn.entity.Orders; import xyz.ljcn.entity.OrdersItem; import xyz.ljcn.service.OrdersService; import xyz.ljcn.utils.BeanFactory; import xyz.ljcn.utils.UUIDUtils; public class OrdersServiceImpl implements OrdersService { OrdersDAO dao = BeanFactory.getBean(OrdersDAO.class); CartDAO cartDAO = BeanFactory.getBean(CartDAO.class); GoodsDAO goodsDAO = BeanFactory.getBean(GoodsDAO.class); public void addOrders(Integer uid, String address) { // 根据已有信息，构造出订单对象 Orders orders = new Orders(); orders.setUid(uid); orders.setAddress(address); // 生成随机32位订单编号 String id = UUIDUtils.getUUID(); orders.setId(id); // 计算总金额 // 查询购物车信息，包含商品信息 Cart cart = new Cart(); cart.setUid(uid); List&lt;Cart&gt; cList = cartDAO.queryWithGoods(cart); // 计算总金额，并构建订单明细数据 double price = 0; // 总金额 // 订单明细 List&lt;OrdersItem&gt; items = new ArrayList&lt;&gt;(); for (Cart c : cList) { price += c.getGoods().getEstoreprice() * c.getBuynum(); OrdersItem item = new OrdersItem(id, c.getGid(), c.getBuynum()); items.add(item); } orders.setTotalprice(price); // 订单状态：1待付款 2已付款 3已过期 4已取消 orders.setStatus(Constants.STATUS_ORDER.UNPAY); orders.setCreatetime(new Date()); // 添加订单数据 dao.addOrders(orders); // 添加订单明细 dao.addOrdersItem(items); // 清空购物车 cartDAO.clear(uid); } @Override public List&lt;Orders&gt; query(Integer id) { return dao.query(id); } @Override public void cancel(String oid, Integer uid) { dao.cancel(oid, uid); } public Orders get(String oid, Integer uid) { // 查询订单 Orders orders = dao.get(oid, uid); // 查询订单明细List List&lt;OrdersItem&gt; list = dao.getItems(oid); orders.setList(list); // 遍历List,查询商品信息 Goods goods = new Goods(); for (OrdersItem item : list) { goods.setId(item.getGid()); Goods goods2 = goodsDAO.query(goods).get(0); item.setGoods(goods2); } return orders; } public void changeStatus(String oid, Integer uid, int status) { dao.changeStatus(oid, uid, status); } } OrdersServiceProxypackage xyz.ljcn.service.Impl; import java.lang.reflect.InvocationHandler; import java.lang.reflect.Method; import java.lang.reflect.Proxy; import java.sql.Connection; import java.sql.SQLException; import xyz.ljcn.service.OrdersService; import xyz.ljcn.utils.BeanFactory; import xyz.ljcn.utils.JDBCUtils; public class OrdersServiceProxy { private static OrdersService service = BeanFactory.getBean(OrdersService.class); public static OrdersService createOrdersServiceProxy() { return (OrdersService)Proxy.newProxyInstance( service.getClass().getClassLoader(), service.getClass().getInterfaces(), new InvocationHandler() { public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { String methodName = method.getName(); Object returnValue = null; if ( methodName.startsWith(&quot;select&quot;) || methodName.startsWith(&quot;query&quot;) || methodName.startsWith(&quot;find&quot;) || methodName.startsWith(&quot;get&quot;)) { // 性能统计相关的业务 returnValue = method.invoke(service, args); } // 进行统一的事务管理 else { /* * 事务处理的细节： * 1、手动开启事务 * 2、必须使用同一个连接对象来完成，因为提交及回滚事务都是通过连接对象来完成 * 3、在catch中回滚事务，并且尽可能保证catch顶级异常Exception * 4、在finally中提交事务 */ Connection conn = null; try { conn = JDBCUtils.getConnection(); System.out.println(conn); conn.setAutoCommit(false); // 核心业务调用 returnValue = method.invoke(service, args); } catch (Exception e) { e.printStackTrace(); try { conn.rollback(); } catch (SQLException e1) { e1.printStackTrace(); } } finally { try { conn.commit(); } catch (SQLException e) { e.printStackTrace(); } /*try { // 关闭连接：实际上连接并没有真正关闭，而是还回连接池中。 conn.close(); } catch (SQLException e) { e.printStackTrace(); }*/ } } return returnValue; } }); } } daoOrdersDAOpackage xyz.ljcn.dao; import java.util.List; import xyz.ljcn.entity.Orders; import xyz.ljcn.entity.OrdersItem; public interface OrdersDAO { void addOrders(Orders orders); void addOrdersItem(List&lt;OrdersItem&gt; items); List&lt;Orders&gt; query(Integer id); void cancel(String oid, Integer uid); Orders get(String oid, Integer uid); List&lt;OrdersItem&gt; getItems(String oid); void changeStatus(String oid, Integer uid, int status); } OrdersDAOImplpackage xyz.ljcn.dao.Impl; import java.util.List; import org.apache.commons.dbutils.QueryRunner; import org.apache.commons.dbutils.handlers.BeanHandler; import org.apache.commons.dbutils.handlers.BeanListHandler; import xyz.ljcn.constants.Constants; import xyz.ljcn.dao.OrdersDAO; import xyz.ljcn.entity.Orders; import xyz.ljcn.entity.OrdersItem; import xyz.ljcn.utils.JDBCUtils; public class OrdersDAOImpl implements OrdersDAO { public void addOrders(Orders orders) { try { //QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); // 后期开发中，所有的非查询操作，都不可以指定数据源，因为每个更新操作，都可能是事务的一部分 QueryRunner qr = new QueryRunner(); String sql = &quot;insert into orders values(?,?,?,?,?,?)&quot;; //qr.update(sql); qr.update(JDBCUtils.getConnection(), sql, orders.getId(), orders.getUid(), orders.getTotalprice(), orders.getAddress(), orders.getStatus(), orders.getCreatetime()); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } public void addOrdersItem(List&lt;OrdersItem&gt; items) { try { QueryRunner qr = new QueryRunner(); String sql = &quot;insert into ordersitem values(?,?,?)&quot;; /*for (OrdersItem item : items) { qr.update(conn, sql, item.getOid(), item.getGid(), item.getBuynum()); }*/ /* * 批量操作，需要接收一个二维数组，其中： * 高维(1维)：操作次数，一般是集合的size * 低维(2维)：参数个数，即?的个数 * */ Object[][] params = new Object[items.size()][3]; // 初始化二维数组数据 for (int i = 0; i &lt; params.length; i++) { params[i][0] = items.get(i).getOid(); params[i][1] = items.get(i).getGid(); params[i][2] = items.get(i).getBuynum(); } qr.batch(JDBCUtils.getConnection(), sql, params); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } @Override public List&lt;Orders&gt; query(Integer id) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from orders where uid=? order by createtime desc&quot;; return qr.query(sql, new BeanListHandler&lt;Orders&gt;(Orders.class), id); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } public void cancel(String oid, Integer uid) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;update orders set status=? where id=? and uid=?&quot;; qr.update(sql, Constants.STATUS_ORDER.CANCEL, oid, uid); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } @Override public Orders get(String oid, Integer uid) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from orders where id=? and uid=?&quot;; return qr.query(sql, new BeanHandler&lt;Orders&gt;(Orders.class), oid, uid); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } @Override public List&lt;OrdersItem&gt; getItems(String oid) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from ordersitem where oid=?&quot;; return qr.query(sql, new BeanListHandler&lt;OrdersItem&gt;(OrdersItem.class), oid); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } public void changeStatus(String oid, Integer uid, int status) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;update orders set status=? where id=? and uid=?&quot;; qr.update(sql, status, oid, uid); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } } END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7.x网络服务无法开启]]></title>
    <url>%2F2019%2F06%2F19%2Fcentos7-network-service-failed%2F</url>
    <content type="text"><![CDATA[错误信息[root@localhost /]# systemctl restart network、 Job for network.service failed because the control process exited with error code. See “systemctl status network.service” and “journalctl -xe” for details. [root@localhost /]# systemctl status network.service network.service - LSB: Bring up/down networking Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled) Active: failed (Result: exit-code) since 三 2019-06-19 22: 54 :05 CST; 3min 47s ago Docs: man:systemd-sysv-generator(8) Process: 9300 ExecStart=/etc/rc.d/init.d/network start (code=exited, status=1/FAILURE) 6月 19 22 :54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22 :54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22 :54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22: 54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22: 54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22 :54 :05 localhost.localdomain network[9300]: RTNETLINK answers: File exists6月 19 22 :54 :05 localhost.localdomain systemd[1]: network.service: control process…16月 19 22 :54 :05 localhost.localdomain systemd[1]: Failed to start LSB: Bring up/do….6月 19 22 :54 :05 localhost.localdomain systemd[1]: Unit network.service entered fai….6月 19 22 :54 :05 localhost.localdomain systemd[1]: network.service failed.Hint: Some lines were ellipsized, use -l to show in full. 问题解决[root@localhost /]# ip a 或者 [root@localhost /]# ip addr 查看mac地址 1: lo: &lt;LOOPBACK,UP,LOWER_UPmtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00 : 00: 00 :00 :00 : 00 brd 00 :00 :00 :00 :00 :00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: ens33: &lt;BROADCAST,MULTICASTmtu 1500 qdisc noop state DOWN group default qlen 1000 link/ether 00: 0c :29 : e2 :42 : 80 brd ff :ff : ff : ff : ff : ff3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UPmtu 1500 qdisc noqueue state DOWN group default qlen 1000 link/ether 52 :54 :00 :27 :7f :88 brd ff :ff :ff :ff :ff :ff inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0 valid_lft forever preferred_lft forever4: virbr0-nic: &lt;BROADCAST,MULTICASTmtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000 link/ether 52 :54 :00 :27 :7f :88 brd ff :ff :ff :ff :ff :ff 注：粗体部分即为mac地址 查看及修改文件[root@localhost /]# cd /etc/sysconfig/network-scripts/ 具体的文件名ifcfg-XXX，例： [ljc@localhost network-scripts]$ vi ifcfg-ens33 修改HWADDR，若没有就添加 HWADDR=mac地址 保存，退出 重启网络服务[ljc@localhost network-scripts]$ service network restart 结果： Restarting network (via systemctl): [ 确定 ] [root@localhost network-scripts]# ping www.baidu.com PING www.a.shifen.com (183.232.231.172) 56(84) bytes of data.64 bytes from 183.232.231.172 (183.232.231.172): icmp_seq=1 ttl=54 time=62.5 ms64 bytes from 183.232.231.172 (183.232.231.172): icmp_seq=2 ttl=54 time=150 ms64 bytes from 183.232.231.172 (183.232.231.172): icmp_seq=3 ttl=54 time=86.3 ms64 bytes from 183.232.231.172 (183.232.231.172): icmp_seq=4 ttl=54 time=156 ms64 bytes from 183.232.231.172 (183.232.231.172): icmp_seq=5 ttl=54 time=86.0 ms END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>CentOS 7.x</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java商城项目（五）——商品查询显示和购物车实现]]></title>
    <url>%2F2019%2F06%2F18%2Festorefive%2F</url>
    <content type="text"><![CDATA[前台页面 goods.jsp goods_detail.jsp cart.jsp buyorcart.jsp 后台代码实现entityGoods.javapackage xyz.ljcn.entity; import java.util.Date; public class Goods { private Integer id; private Integer cid; private String name; private Double marketprice; private Double estoreprice; private Integer num; private String imgurl; private Integer ishot; private Integer status; private Date createtime; private String description; public Integer getId() { return id; } public void setId(Integer id) { this.id = id; } public Integer getCid() { return cid; } public void setCid(Integer cid) { this.cid = cid; } public String getName() { return name; } public void setName(String name) { this.name = name; } public Double getMarketprice() { return marketprice; } public void setMarketprice(Double marketprice) { this.marketprice = marketprice; } public Double getEstoreprice() { return estoreprice; } public void setEstoreprice(Double estoreprice) { this.estoreprice = estoreprice; } public Integer getNum() { return num; } public void setNum(Integer num) { this.num = num; } public String getImgurl() { return imgurl; } public void setImgurl(String imgurl) { this.imgurl = imgurl; } public Integer getIshot() { return ishot; } public void setIshot(Integer ishot) { this.ishot = ishot; } public Integer getStatus() { return status; } public void setStatus(Integer status) { this.status = status; } public Date getCreatetime() { return createtime; } public void setCreatetime(Date createtime) { this.createtime = createtime; } public String getDescription() { return description; } public void setDescription(String description) { this.description = description; } @Override public String toString() { return &quot;Goods [id=&quot; + id + &quot;, cid=&quot; + cid + &quot;, name=&quot; + name + &quot;, marketprice=&quot; + marketprice + &quot;, estoreprice=&quot; + estoreprice + &quot;, num=&quot; + num + &quot;, imgurl=&quot; + imgurl + &quot;, ishot=&quot; + ishot + &quot;, status=&quot; + status + &quot;, createtime=&quot; + createtime + &quot;, description=&quot; + description + &quot;]&quot;; } public Goods() { super(); } public Goods(Integer id, Integer cid, String name, Double marketprice, Double estoreprice, Integer num, String imgurl, Integer ishot, Integer status, Date createtime, String description) { super(); this.id = id; this.cid = cid; this.name = name; this.marketprice = marketprice; this.estoreprice = estoreprice; this.num = num; this.imgurl = imgurl; this.ishot = ishot; this.status = status; this.createtime = createtime; this.description = description; } } Cart.javapackage xyz.ljcn.entity; public class Cart { private Integer uid; private Integer gid; private Integer buynum; /* * 购物项和商品的关系？ * 购物项 ===&gt; 商品 1:1 * 商品 ====&gt; 购物项 1:n * 当前是购物项对象，因此可以在该对象中添加商品对象的引用 */ private Goods goods; public Goods getGoods() { return goods; } public void setGoods(Goods goods) { this.goods = goods; } public Integer getUid() { return uid; } public void setUid(Integer uid) { this.uid = uid; } public Integer getGid() { return gid; } public void setGid(Integer gid) { this.gid = gid; } public Integer getBuynum() { return buynum; } public void setBuynum(Integer buynum) { this.buynum = buynum; } @Override public String toString() { return &quot;Cart [uid=&quot; + uid + &quot;, gid=&quot; + gid + &quot;, buynum=&quot; + buynum + &quot;, goods=&quot; + goods + &quot;]&quot;; } } servletGoodsServlet.javapackage xyz.ljcn.servlet; import java.io.IOException; import java.lang.reflect.InvocationTargetException; import java.util.List; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.apache.commons.beanutils.BeanUtils; import org.apache.commons.lang3.StringUtils; import xyz.ljcn.entity.Goods; import xyz.ljcn.service.GoodsService; import xyz.ljcn.utils.BeanFactory; @SuppressWarnings(&quot;all&quot;) @WebServlet(&quot;/goods&quot;) public class GoodsServlet extends BaseServlet { GoodsService service = BeanFactory.getBean(GoodsService.class); public void query(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { Goods goods = new Goods(); try { BeanUtils.populate(goods, req.getParameterMap()); } catch (Exception e) { e.printStackTrace(); } List&lt;Goods&gt; gList = service.query(goods); req.setAttribute(&quot;gList&quot;, gList); if ( StringUtils.equals(req.getParameter(&quot;target&quot;), &quot;detail&quot;) ) { req.getRequestDispatcher(&quot;/goods_detail.jsp&quot;).forward(req, resp); } else { req.getRequestDispatcher(&quot;/goods.jsp&quot;).forward(req, resp); } } } CartServlet.javapackage xyz.ljcn.servlet; import java.io.IOException; import java.net.URLEncoder; import java.util.HashMap; import java.util.List; import java.util.Map; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import xyz.ljcn.entity.Cart; import xyz.ljcn.entity.User; import xyz.ljcn.service.CartService; import xyz.ljcn.utils.BeanFactory; @SuppressWarnings(&quot;all&quot;) @WebServlet(&quot;/cart&quot;) public class CartServlet extends BaseServlet { CartService service = BeanFactory.getBean(CartService.class); public void del(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { User user = isLogin(req, resp); if ( user != null ) { int gid = Integer.parseInt(req.getParameter(&quot;gid&quot;)); Integer uid = user.getId(); service.del(uid, gid); //resp.sendRedirect(req.getContextPath() + &quot;/cart?method=query&quot;); } else { resp.getWriter().write(&quot;nologin&quot;); } } public void changeNum(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { User user = isLogin(req, resp); if ( user != null ) { int buynum = Integer.parseInt(req.getParameter(&quot;buynum&quot;)); int gid = Integer.parseInt(req.getParameter(&quot;gid&quot;)); Integer uid = user.getId(); Cart cart = new Cart(); cart.setUid(uid); cart.setGid(gid); cart.setBuynum(buynum); service.changeNum(cart); //resp.sendRedirect(req.getContextPath() + &quot;/cart?method=query&quot;); } else { resp.getWriter().write(&quot;nologin&quot;); } } public void goodsNum(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { int goodsNum = service.goodsNum(req.getParameter(&quot;uid&quot;)); resp.getWriter().write(goodsNum+&quot;&quot;); } public void query(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 1、判断是否登录 User user = (User)req.getSession().getAttribute(&quot;loginUser&quot;); if ( user == null ) { // 登录成功之后，跳转到之前所在的页面 // 从哪个页面跳转过来的 String referer = req.getHeader(&quot;Referer&quot;); if ( referer != null ) { referer = URLEncoder.encode(referer, &quot;UTF-8&quot;); resp.sendRedirect(req.getContextPath() + &quot;/login.jsp?redirect=&quot; + referer); } else { resp.sendRedirect(req.getContextPath() + &quot;/login.jsp&quot;); } return ; } Cart cart = new Cart(); cart.setUid(user.getId()); List&lt;Cart&gt; cList = service.queryWithGoods(cart); req.setAttribute(&quot;cList&quot;, cList); req.getRequestDispatcher(&quot;/cart.jsp&quot;).forward(req, resp); } public void add(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 1、判断是否登录 User user = (User)req.getSession().getAttribute(&quot;loginUser&quot;); if ( user == null ) { // 从哪个页面跳转过来的 String referer = req.getHeader(&quot;Referer&quot;); System.out.println(referer); referer = URLEncoder.encode(referer, &quot;UTF-8&quot;); resp.sendRedirect(req.getContextPath() + &quot;/login.jsp?redirect=&quot; + referer); return ; } // 2、获取商品id和购买数量 String gid = req.getParameter(&quot;gid&quot;); String buynum = req.getParameter(&quot;buynum&quot;); Integer uid = user.getId(); Cart cart = new Cart(); cart.setGid(Integer.parseInt(gid)); cart.setUid(uid); cart.setBuynum(Integer.parseInt(buynum)); // 3、调用业务层 service.add(cart); // 4、跳转到中间页 resp.sendRedirect(req.getContextPath() + &quot;/buyorcart.jsp&quot;); } } serviceGoodsService.javapackage xyz.ljcn.service; import java.util.List; import xyz.ljcn.entity.Goods; public interface GoodsService { List&lt;Goods&gt; query(Goods goods); } CartService.javapackage xyz.ljcn.service; import java.util.List; import xyz.ljcn.entity.Cart; public interface CartService { List&lt;Cart&gt; query(Cart cart); void add(Cart cart); List&lt;Cart&gt; queryWithGoods(Cart cart); int goodsNum(String uid); void changeNum(Cart cart); void del(Integer uid, int gid); } serviceImplGoodsServiceImpl.javapackage xyz.ljcn.service.Impl; import java.util.List; import xyz.ljcn.dao.GoodsDAO; import xyz.ljcn.entity.Goods; import xyz.ljcn.service.GoodsService; import xyz.ljcn.utils.BeanFactory; public class GoodsServiceImpl implements GoodsService { GoodsDAO dao = BeanFactory.getBean(GoodsDAO.class); public List&lt;Goods&gt; query(Goods goods) { return dao.query(goods); } } CartServiceImpl.javapackage xyz.ljcn.service.Impl; import java.util.List; import xyz.ljcn.dao.CartDAO; import xyz.ljcn.dao.GoodsDAO; import xyz.ljcn.entity.Cart; import xyz.ljcn.service.CartService; import xyz.ljcn.utils.BeanFactory; public class CartServiceImpl implements CartService { CartDAO dao = BeanFactory.getBean(CartDAO.class); GoodsDAO goodsDao = BeanFactory.getBean(GoodsDAO.class); public List&lt;Cart&gt; query(Cart cart) { return dao.query(cart); } public void add(Cart cart) { // 1、查询购买记录 List&lt;Cart&gt; cList = dao.query(cart); // 没有购买记录，新增 if ( cList == null || cList.size() == 0 ) { dao.add(cart); } // 有购买记录，修改购买数量 else { int oldNum = cList.get(0).getBuynum(); int newNum = oldNum + cart.getBuynum(); cart.setBuynum(newNum); dao.update(cart); } } @Override public List&lt;Cart&gt; queryWithGoods(Cart cart) { return dao.queryWithGoods(cart); } @Override public int goodsNum(String uid) { return dao.goodsNum(uid); } @Override public void changeNum(Cart cart) { dao.changeNum(cart); } @Override public void del(Integer uid, int gid) { dao.del(uid, gid); } } daoCategoryDAOpackage xyz.ljcn.dao; import java.util.List; import xyz.ljcn.entity.Category; public interface CategoryDAO { List&lt;Category&gt; query(); } GoodsDAOpackage xyz.ljcn.dao; import java.util.List; import xyz.ljcn.entity.Goods; public interface GoodsDAO { List&lt;Goods&gt; query(Goods goods); } daoImplCategoryDAOImplpackage xyz.ljcn.dao.Impl; import java.util.List; import org.apache.commons.dbutils.QueryRunner; import org.apache.commons.dbutils.handlers.BeanListHandler; import xyz.ljcn.dao.CategoryDAO; import xyz.ljcn.entity.Category; import xyz.ljcn.utils.JDBCUtils; public class CategoryDAOImpl implements CategoryDAO { public List&lt;Category&gt; query() { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from category &quot;; return qr.query(sql, new BeanListHandler&lt;Category&gt;(Category.class)); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } } GoodsDAOImplpackage xyz.ljcn.dao.Impl; import java.util.ArrayList; import java.util.List; import org.apache.commons.dbutils.QueryRunner; import org.apache.commons.dbutils.handlers.BeanListHandler; import org.apache.commons.lang3.StringUtils; import xyz.ljcn.dao.GoodsDAO; import xyz.ljcn.entity.Goods; import xyz.ljcn.utils.JDBCUtils; public class GoodsDAOImpl implements GoodsDAO { public List&lt;Goods&gt; query(Goods goods) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from goods where 1=1&quot;; List&lt;Object&gt; list = new ArrayList&lt;&gt;(); if ( goods.getId() != null ) { sql += &quot; and id=? &quot;; list.add(goods.getId()); } if ( goods.getCid() != null ) { sql += &quot; and cid=? &quot;; list.add(goods.getCid()); } //if ( goods.getName() != null &amp;&amp; !&quot;&quot;.equals(goods.getName()) ) if ( StringUtils.isNotBlank(goods.getName()) ) { sql += &quot; and name like ? &quot;; list.add(&quot;%&quot; + goods.getName() + &quot;%&quot;); } //... Object[] params = list.toArray(); return qr.query(sql, new BeanListHandler&lt;Goods&gt;(Goods.class), params); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } } END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java商城项目（四）——登录实现]]></title>
    <url>%2F2019%2F06%2F17%2Festorefour%2F</url>
    <content type="text"><![CDATA[index.jsp &lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot;%&gt; &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;title&gt;登录&lt;/title&gt; &lt;%@include file=&quot;inc/common_head.jsp&quot;%&gt; &lt;script type=&quot;text/javascript&quot;&gt; jQuery(function($) { $(&quot;#regBtn&quot;).click(function() { var ok = userLogin(); if ( ok ) { // 发送到后台的数据 var data = { method: &quot;login&quot;, telephone: $(&quot;#telephone&quot;).val(), password: $(&quot;#password&quot;).val() } // 是否发送记住用户名的标识 if ( $(&quot;#remember&quot;).is(&quot;:checked&quot;) ) { data.remember = 1; } $.ajax({ url: &quot;user&quot;, type: &quot;post&quot;, data: data, success: function(code) { if ( code == &quot;ok&quot; ) { if ( &quot;${param.redirect}&quot; ) { //alert(&quot;${param.redirect}&quot;) // URL在java中已经进行了编码，因此需要对URL进行解码 location = decodeURIComponent(&quot;${param.redirect}&quot;); } else { location = &quot;index.jsp&quot;; } } else { alert(&quot;用户名或密码错误！&quot;); } } }); } })//.click(); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;%@include file=&quot;inc/header.jsp&quot;%&gt; &lt;div class=&quot;block block1&quot;&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;div class=&quot;usBox clearfix&quot;&gt; &lt;div class=&quot;usBox_1&quot;&gt; &lt;div class=&quot;login_tab&quot;&gt; &lt;ul&gt; &lt;li class=&quot;active&quot;&gt;用户登录&lt;/li&gt; &lt;li onclick=&quot;location.href=&apos;register.jsp&apos;;&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt;用户注册&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;form name=&quot;formLogin&quot; id=&quot;loginForm&quot; action=&quot;javascript:alert(1);&quot; method=&quot;post&quot;&gt; &lt;table width=&quot;100%&quot; border=&quot;0&quot; align=&quot;left&quot; cellpadding=&quot;3&quot; cellspacing=&quot;5&quot;&gt; &lt;tr&gt; &lt;td width=&quot;70px&quot; class=&quot;justify&quot;&gt;用户名&lt;/td&gt; &lt;td&gt; &lt;input placeholder=&quot;请输入手机号&quot; value=&quot;${cookie.telephone.value }&quot; name=&quot;telephone&quot; id=&quot;telephone&quot; class=&quot;inputBg&quot; onkeyup=&quot;is_registered(this.value, true);&quot; /&gt; &lt;span style=&quot;color:#FF0000&quot; id=&quot;username_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;密码&lt;/td&gt; &lt;td&gt; &lt;input name=&quot;password&quot; id=&quot;password&quot; value=&quot;123123&quot; placeholder=&quot;请输入密码&quot; type=&quot;password&quot; class=&quot;inputBg&quot; onkeyup=&quot;check_password(this.value, true);&quot; /&gt; &lt;span style=&quot;color:#FF0000&quot; id=&quot;password_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;checkbox&quot; value=&quot;1&quot; ${empty cookie.telephone.value ? &quot;&quot; : &quot;checked&quot; } name=&quot;remember&quot; id=&quot;remember&quot; /&gt; &lt;label for=&quot;remember&quot;&gt;记住用户名&lt;/label&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;input id=&quot;regBtn&quot; value=&quot;立 即 登 录&quot; type=&quot;button&quot; class=&quot;us_Submit_reg&quot;/&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot; onclick=&quot;location=&apos;register.jsp&apos;&quot;&gt; &lt;input id=&quot;loginBtn&quot; value=&quot;没有账号？立即注册&quot; type=&quot;button&quot; class=&quot;us_Submit_log&quot; /&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;%@include file=&quot;inc/footer.jsp&quot;%&gt; &lt;/body&gt; &lt;/html&gt; servletpublic void login(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {` String telephone = req.getParameter(&quot;telephone&quot;); String password = req.getParameter(&quot;password&quot;); User user = service.login(telephone, password); if ( user == null ) { resp.getWriter().write(&quot;err&quot;); } else { // 将用户对象保存到session中 req.getSession().setAttribute(Constants.USER.LOGINUSER, user); // 记住用户名 String remember = req.getParameter(&quot;remember&quot;); if ( remember != null ) { Cookie c = new Cookie(&quot;telephone&quot;, telephone); c.setMaxAge(9999999); resp.addCookie(c); } else { Cookie c = new Cookie(&quot;telephone&quot;, null); c.setMaxAge(0); resp.addCookie(c); } resp.getWriter().write(&quot;ok&quot;); } } serviceUser login(String telephone, String password); serviceImplpublic User login(String telephone, String password) { password = MD5Utils.str2MD5(password); return dao.login(telephone, password); } daoUser login(String telephone, String password); daoImplpublic User login(String telephone, String password) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from user where telephone=? and password=?&quot;; return qr.query(sql, new BeanHandler&lt;User&gt;(User.class), telephone, password); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } index.jsp&lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot;%&gt; &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;title&gt;登录&lt;/title&gt; &lt;%@include file=&quot;inc/common_head.jsp&quot;%&gt; &lt;script type=&quot;text/javascript&quot;&gt; jQuery(function($) { $(&quot;#regBtn&quot;).click(function() { var ok = userLogin(); if ( ok ) { // 发送到后台的数据 var data = { method: &quot;login&quot;, telephone: $(&quot;#telephone&quot;).val(), password: $(&quot;#password&quot;).val() } // 是否发送记住用户名的标识 if ( $(&quot;#remember&quot;).is(&quot;:checked&quot;) ) { data.remember = 1; } $.ajax({ url: &quot;user&quot;, type: &quot;post&quot;, data: data, success: function(code) { if ( code == &quot;ok&quot; ) { if ( &quot;${param.redirect}&quot; ) { //alert(&quot;${param.redirect}&quot;) // URL在java中已经进行了编码，因此需要对URL进行解码 location = decodeURIComponent(&quot;${param.redirect}&quot;); } else { location = &quot;index.jsp&quot;; } } else { alert(&quot;用户名或密码错误！&quot;); } } }); } })//.click(); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;%@include file=&quot;inc/header.jsp&quot;%&gt; &lt;div class=&quot;block block1&quot;&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;div class=&quot;usBox clearfix&quot;&gt; &lt;div class=&quot;usBox_1&quot;&gt; &lt;div class=&quot;login_tab&quot;&gt; &lt;ul&gt; &lt;li class=&quot;active&quot;&gt;用户登录&lt;/li&gt; &lt;li onclick=&quot;location.href=&apos;register.jsp&apos;;&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt;用户注册&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;form name=&quot;formLogin&quot; id=&quot;loginForm&quot; action=&quot;javascript:alert(1);&quot; method=&quot;post&quot;&gt; &lt;table width=&quot;100%&quot; border=&quot;0&quot; align=&quot;left&quot; cellpadding=&quot;3&quot; cellspacing=&quot;5&quot;&gt; &lt;tr&gt; &lt;td width=&quot;70px&quot; class=&quot;justify&quot;&gt;用户名&lt;/td&gt; &lt;td&gt; &lt;input placeholder=&quot;请输入手机号&quot; value=&quot;${cookie.telephone.value }&quot; name=&quot;telephone&quot; id=&quot;telephone&quot; class=&quot;inputBg&quot; onkeyup=&quot;is_registered(this.value, true);&quot; /&gt; &lt;span style=&quot;color:#FF0000&quot; id=&quot;username_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;密码&lt;/td&gt; &lt;td&gt; &lt;input name=&quot;password&quot; id=&quot;password&quot; value=&quot;123123&quot; placeholder=&quot;请输入密码&quot; type=&quot;password&quot; class=&quot;inputBg&quot; onkeyup=&quot;check_password(this.value, true);&quot; /&gt; &lt;span style=&quot;color:#FF0000&quot; id=&quot;password_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;checkbox&quot; value=&quot;1&quot; ${empty cookie.telephone.value ? &quot;&quot; : &quot;checked&quot; } name=&quot;remember&quot; id=&quot;remember&quot; /&gt; &lt;label for=&quot;remember&quot;&gt;记住用户名&lt;/label&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;input id=&quot;regBtn&quot; value=&quot;立 即 登 录&quot; type=&quot;button&quot; class=&quot;us_Submit_reg&quot;/&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot; onclick=&quot;location=&apos;register.jsp&apos;&quot;&gt; &lt;input id=&quot;loginBtn&quot; value=&quot;没有账号？立即注册&quot; type=&quot;button&quot; class=&quot;us_Submit_log&quot; /&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;%@include file=&quot;inc/footer.jsp&quot;%&gt; &lt;/body&gt; &lt;/html&gt; 运行结果 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java商城项目——实现注册功能（三）]]></title>
    <url>%2F2019%2F06%2F16%2Festorethree%2F</url>
    <content type="text"><![CDATA[工作流程 实现注册view层index.jsp&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt; &lt;% String path = request.getContextPath(); String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;; %&gt; &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt; &lt;html&gt; &lt;head&gt; &lt;base href=&quot;&lt;%=basePath%&gt;&quot;&gt; &lt;title&gt;电商&lt;/title&gt; &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt; &lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt; &lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt; &lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt; &lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt; &lt;!-- &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;styles.css&quot;&gt; --&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;register.jsp&quot;&gt; 注册 &lt;/a&gt; &lt;br&gt; &lt;/body&gt; &lt;/html&gt; register.jsp &lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot;%&gt; &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;title&gt;注册&lt;/title&gt; &lt;%@include file=&quot;inc/common_head.jsp&quot;%&gt; &lt;script type=&quot;text/javascript&quot;&gt; jQuery(function($) { var cunzai = true; $(&quot;#telephone&quot;).bind(&quot;keyup blur&quot;, function() { var isTel = check_telephone(this.value); if ( isTel ) { // 发送ajax请求，验证是否已经注册 $.ajax({ url: &quot;user?method=checkExists&amp;tel=&quot; + this.value, success: function(exists) { cunzai = exists == &quot;true&quot;; if ( exists == &quot;true&quot; ) { $(&quot;#telephone_notice&quot;) .attr(&quot;class&quot;, &quot;error&quot;) .text(&quot;该手机号已注册！&quot;); } else { $(&quot;#telephone_notice&quot;) .attr(&quot;class&quot;, &quot;ok&quot;) .text(&quot;&quot;); } } }); } }); var smsCodeOk = false; $(&quot;#code_phone&quot;).bind(&quot;keyup blur&quot;, function() { // 前端校验规则 var ok = check_tel_code(this.value); if ( ok ) { // 发送ajax请求，验证是否已经注册 $.ajax({ url: &quot;user?method=checkSMSCode&amp;smsCode=&quot; + this.value, success: function(ok) { smsCodeOk = ok == &quot;true&quot;; if ( ok == &quot;false&quot; ) { $(&quot;#code_phone_notice&quot;) .attr(&quot;class&quot;, &quot;error&quot;) .text(&quot;短信验证码错误！&quot;); } else { $(&quot;#code_phone_notice&quot;) .attr(&quot;class&quot;, &quot;ok&quot;) .text(&quot;&quot;); } } }); } }); var imgCodeOk = false; $(&quot;#captcha&quot;).bind(&quot;keyup blur&quot;, function() { // 前端校验规则 var ok = check_captcha(this.value); if ( ok ) { // 发送ajax请求，验证是否已经注册 $.ajax({ url: &quot;user?method=checkIMGCode&amp;imgCode=&quot; + this.value, success: function(ok) { imgCodeOk = ok == &quot;true&quot;; if ( ok == &quot;false&quot; ) { $(&quot;#captcha_notice&quot;) .attr(&quot;class&quot;, &quot;error&quot;) .text(&quot;验证码错误！&quot;); } else { $(&quot;#captcha_notice&quot;) .attr(&quot;class&quot;, &quot;ok&quot;) .text(&quot;&quot;); } } }); } }); $(&quot;#sendSMS&quot;).click(function() { if ( cunzai ) { return; } // 60秒倒计时 var time = 5; var that = this; var unSendAble = $(that).data(&quot;unSendAble&quot;); // 第一次点击为undefined if ( unSendAble ) { return; } var tel = $(&quot;#telephone&quot;).val(); if ( !/^1[3456789]\d{9}$/.test(tel) ) { return; } $(that) .text(&quot;再次发送(&quot;+ time +&quot;)...&quot;) .css({ &quot;background-color&quot;: &quot;gray&quot;, border: &quot;1px solid #ccc&quot; }) .data(&quot;unSendAble&quot;, true); // 不能发送 var intervalID = setInterval(function() { $(that).text(&quot;再次发送(&quot;+ --time +&quot;)...&quot;); if ( time == 0 ) { clearInterval(intervalID); $(that) .text(&quot;获取短信验证码&quot;) .data(&quot;unSendAble&quot;, false) .css({ &quot;background-color&quot;: &quot;#0083FF&quot;, border: &quot;1px solid #2E82FF&quot; }); } }, 1000); $.ajax({ url: &quot;user?method=sendSMS&amp;tel=&quot; + tel, dataType: &quot;json&quot;, success: function(result) { // {&quot;Message&quot;:&quot;OK&quot;,&quot;RequestId&quot;:&quot;CDEF903F-9394-46A4-8B45-5A17439A6E0B&quot;,&quot;BizId&quot;:&quot;302210358584111842^0&quot;,&quot;Code&quot;:&quot;OK&quot;} /* if ( result.Message == &quot;OK&quot; ) { // 60秒倒计时 // 按钮不能点击 alert(&quot;发送成功！&quot;); } else { alert(&quot;发送失败，原因是：&quot; + result.Message); } */ } }); }); $(&quot;#formUser&quot;).submit(function() { return ( !cunzai &amp;&amp; imgCodeOk &amp;&amp; smsCodeOk &amp;&amp; register() ); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;%@include file=&quot;inc/header.jsp&quot;%&gt; &lt;div class=&quot;block block1&quot;&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;div class=&quot;usBox&quot;&gt; &lt;div class=&quot;usBox_1&quot;&gt; &lt;div class=&quot;login_tab&quot;&gt; &lt;ul&gt; &lt;li onclick=&quot;location.href=&apos;login.jsp&apos;;&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt;用户登录&lt;/a&gt; &lt;/li&gt; &lt;li class=&quot;active&quot;&gt;用户注册&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;form action=&quot;user?method=register&quot; method=&quot;post&quot; name=&quot;formUser&quot; id=&quot;formUser&quot;&gt; &lt;table width=&quot;100%&quot; border=&quot;0&quot; align=&quot;left&quot; cellpadding=&quot;5&quot; cellspacing=&quot;3&quot;&gt; &lt;tr&gt; &lt;td width=&quot;70px&quot; class=&quot;justify&quot;&gt;昵称&lt;/td&gt; &lt;td&gt; &lt;input name=&quot;nickname&quot; type=&quot;text&quot; id=&quot;nickname&quot; placeholder=&quot;请输入昵称&quot; onkeyup=&quot;check_nickname(this.value);&quot; onblur=&quot;check_nickname(this.value);&quot; class=&quot;inputBg&quot; /&gt; &lt;span id=&quot;nickname_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;密码&lt;/td&gt; &lt;td&gt; &lt;input name=&quot;password&quot; type=&quot;password&quot; id=&quot;password1&quot; placeholder=&quot;请输入密码&quot; onkeyup=&quot;check_password(this.value);&quot; onblur=&quot;check_password(this.value);&quot; class=&quot;inputBg&quot; /&gt; &lt;span id=&quot;password_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;确认密码&lt;/td&gt; &lt;td&gt; &lt;input name=&quot;confirm_password&quot; type=&quot;password&quot; id=&quot;conform_password&quot; onkeyup=&quot;check_conform_password(this.value);&quot; onblur=&quot;check_conform_password(this.value);&quot; class=&quot;inputBg&quot; placeholder=&quot;请输入确认密码&quot; /&gt; &lt;span id=&quot;conform_password_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;手机号码&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;text&quot; name=&quot;telephone&quot; id=&quot;telephone&quot; class=&quot;inputBg&quot; placeholder=&quot;请输入手机号码&quot; /&gt; &lt;span id=&quot;telephone_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;手机验证码&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;text&quot; name=&quot;code_phone&quot; id=&quot;code_phone&quot; class=&quot;inputBg&quot; placeholder=&quot;请输入手机验证码&quot; /&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;get_code&quot; id=&quot;sendSMS&quot;&gt;获取短信验证码&lt;/a&gt; &lt;span id=&quot;code_phone_notice&quot; style=&quot;margin-left:-132px;&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&quot;justify&quot;&gt;图片验证码&lt;/td&gt; &lt;td&gt; &lt;input id=&quot;captcha&quot; name=&quot;captcha&quot; class=&quot;inputBg&quot; placeholder=&quot;请输入图片验证码&quot; maxlength=&quot;4&quot; /&gt;&lt;img id=&quot;vcode&quot; src=&quot;validatecode.jsp&quot; onclick=&quot;src=&apos;validatecode.jsp?&apos;+Math.random()&quot; /&gt; &lt;span id=&quot;captcha_notice&quot;&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;input id=&quot;regBtn&quot; value=&quot;立 即 注 册&quot; type=&quot;submit&quot; class=&quot;us_Submit_reg&quot;/&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:;&quot; onclick=&quot;location=&apos;login.jsp&apos;&quot;&gt; &lt;input id=&quot;loginBtn&quot; value=&quot;已有账号？立即登录&quot; type=&quot;button&quot; class=&quot;us_Submit_log&quot; /&gt; &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;%@include file=&quot;inc/footer.jsp&quot;%&gt; &lt;/body&gt; &lt;/html&gt; Servletpackage xyz.ljcn.servlet; import java.io.IOException; import java.lang.reflect.Method; import java.net.URLEncoder; import javax.servlet.ServletException; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import xyz.ljcn.entity.User; @SuppressWarnings(&quot;all&quot;) public class BaseServlet extends HttpServlet{ public User isLogin(HttpServletRequest req, HttpServletResponse resp) throws IOException { User user = (User)req.getSession().getAttribute(&quot;loginUser&quot;); // 如果是ajax请求，则请求头中会携带X-Requested-With，值为XMLHttpRequest String xrw = req.getHeader(&quot;X-Requested-With&quot;); if ( user == null &amp;&amp; xrw == null ) { // 登录成功之后，跳转到之前所在的页面 // 从哪个页面跳转过来的 String referer = req.getHeader(&quot;Referer&quot;); if ( referer != null ) { referer = URLEncoder.encode(referer, &quot;UTF-8&quot;); resp.sendRedirect(req.getContextPath() + &quot;/login.jsp?redirect=&quot; + referer); } else { resp.sendRedirect(req.getContextPath() + &quot;/login.jsp&quot;); } } return user; } public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { request.setCharacterEncoding(&quot;UTF-8&quot;); // servlet的路径?method=serlvet中的方法名 String methodName = request.getParameter(&quot;method&quot;); Class clazz = this.getClass(); try { Method method = clazz.getMethod(methodName, HttpServletRequest.class, HttpServletResponse.class); method.invoke(this, request, response); } catch (Exception e) { e.printStackTrace(); } } } package xyz.ljcn.servlet; import java.io.IOException; import javax.jws.WebService; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.Cookie; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.apache.commons.beanutils.BeanUtils; import xyz.ljcn.constants.Constants; import xyz.ljcn.entity.User; import xyz.ljcn.service.UserService; import xyz.ljcn.utils.BeanFactory; import com.aliyuncs.CommonRequest; import com.aliyuncs.CommonResponse; import com.aliyuncs.DefaultAcsClient; import com.aliyuncs.IAcsClient; import com.aliyuncs.exceptions.ClientException; import com.aliyuncs.exceptions.ServerException; import com.aliyuncs.http.MethodType; import com.aliyuncs.profile.DefaultProfile; @SuppressWarnings(&quot;all&quot;) @WebServlet(&quot;/user&quot;) public class UserServlet extends BaseServlet{ public static void main(String[] args) { DefaultProfile profile = DefaultProfile.getProfile(&quot;default&quot;, &quot;LTAIPihk73PHuXc9&quot;, &quot;tPmn9rcvDEhU67x6Eg8I2DQIVPLPe9&quot;); IAcsClient client = new DefaultAcsClient(profile); CommonRequest request = new CommonRequest(); //request.setProtocol(ProtocolType.HTTPS); request.setMethod(MethodType.POST); request.setDomain(&quot;dysmsapi.aliyuncs.com&quot;); request.setVersion(&quot;2017-05-25&quot;); request.setAction(&quot;SendSms&quot;); request.putQueryParameter(&quot;PhoneNumbers&quot;, &quot;18105185234&quot;); request.putQueryParameter(&quot;SignName&quot;, &quot;千峰商城&quot;); request.putQueryParameter(&quot;TemplateCode&quot;, &quot;SMS_166096053&quot;); request.putQueryParameter(&quot;TemplateParam&quot;, &quot;{\&quot;code\&quot;:\&quot;123456\&quot;}&quot;); try { CommonResponse response = client.getCommonResponse(request); System.out.println(response.getData()); } catch (ServerException e) { e.printStackTrace(); } catch (ClientException e) { e.printStackTrace(); } } UserService service = BeanFactory.getBean(UserService.class); public void login(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String telephone = req.getParameter(&quot;telephone&quot;); String password = req.getParameter(&quot;password&quot;); User user = service.login(telephone, password); if ( user == null ) { resp.getWriter().write(&quot;err&quot;); } else { // 将用户对象保存到session中 req.getSession().setAttribute(Constants.USER.LOGINUSER, user); // 记住用户名 String remember = req.getParameter(&quot;remember&quot;); if ( remember != null ) { Cookie c = new Cookie(&quot;telephone&quot;, telephone); c.setMaxAge(9999999); resp.addCookie(c); } else { Cookie c = new Cookie(&quot;telephone&quot;, null); c.setMaxAge(0); resp.addCookie(c); } resp.getWriter().write(&quot;ok&quot;); } } public void register(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { User user = new User(); try { BeanUtils.populate(user, req.getParameterMap()); service.register(user); resp.sendRedirect(req.getContextPath() + &quot;/login.jsp&quot;); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(e); } } // 验证图片验证码是否正确 public void checkIMGCode(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String imgCode1 = req.getParameter(&quot;imgCode&quot;); String imgCode2 = (String)req.getSession().getAttribute(&quot;code&quot;); if ( imgCode1 == null || &quot;&quot;.equals(imgCode1) || !imgCode1.equalsIgnoreCase(imgCode2) ) { resp.getWriter().write(&quot;false&quot;); } else { resp.getWriter().write(&quot;true&quot;); } } // 验证短信验证码是否正确 public void checkSMSCode(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String smsCode1 = req.getParameter(&quot;smsCode&quot;); String smsCode2 = (String)req.getSession().getAttribute(&quot;smsCode&quot;); if ( smsCode1 == null || &quot;&quot;.equals(smsCode1) || !smsCode1.equalsIgnoreCase(smsCode2) ) { resp.getWriter().write(&quot;false&quot;); } else { resp.getWriter().write(&quot;true&quot;); } } // 验证手机号是否被注册 public void checkExists(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String tel = req.getParameter(&quot;tel&quot;); boolean exists = service.checkExists(tel); resp.getWriter().write(exists + &quot;&quot;); } public void sendSMS(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { // 生成6位验证码 String code = (Math.random()+&quot;&quot;).substring(2, 8); // 将验证码保存到session中，验证使用 req.getSession().setAttribute(&quot;smsCode&quot;, code); System.out.println(code+&quot;====================&quot;); } } servicepackage xyz.ljcn.service; import xyz.ljcn.entity.User; public interface UserService { boolean checkExists(String tel); void register(User user); User login(String telephone, String password); } serviceImplpackage xyz.ljcn.service.Impl; import xyz.ljcn.dao.UserDao; import xyz.ljcn.entity.User; import xyz.ljcn.service.UserService; import xyz.ljcn.utils.BeanFactory; import xyz.ljcn.utils.MD5Utils; public class UserServiceImpl implements UserService{ UserDao dao = BeanFactory.getBean(UserDao.class); @Override public boolean checkExists(String tel) { return dao.checkExists(tel); } @Override public void register(User user) { boolean exists = dao.checkExists(user.getTelephone()); if ( !exists ) { String pwd = MD5Utils.str2MD5(user.getPassword()); user.setPassword(pwd); dao.register(user); } } @Override public User login(String telephone, String password) { // TODO Auto-generated method stub return null; } } Daopackage xyz.ljcn.dao; import xyz.ljcn.entity.User; public interface UserDao { boolean checkExists(String tel); void register(User user); User login(String telephone, String password); } DaoImplpackage xyz.ljcn.dao.Impl; import org.apache.commons.dbutils.QueryRunner; import org.apache.commons.dbutils.handlers.BeanHandler; import org.apache.commons.dbutils.handlers.ScalarHandler; import xyz.ljcn.dao.UserDao; import xyz.ljcn.entity.User; import xyz.ljcn.utils.JDBCUtils; public class UserDaoImpl implements UserDao{ @Override public boolean checkExists(String tel) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select count(*) from user where telephone=?&quot;; return qr.query(sql, new ScalarHandler&lt;Long&gt;(), tel) &gt; 0; } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } @Override public void register(User user) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;insert into user values(null,?,?,?)&quot;; qr.update(sql, user.getPassword(), user.getNickname(), user.getTelephone()); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } @Override public User login(String telephone, String password) { try { QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); String sql = &quot;select * from user where telephone=? and password=?&quot;; return qr.query(sql, new BeanHandler&lt;User&gt;(User.class), telephone, password); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(&quot;...&quot;); } } } 实体类package xyz.ljcn.entity; @SuppressWarnings(&quot;all&quot;) public class User { private Integer id; private String nickname; private String telephone; private String password; public Integer getId() { return id; } public void setId(Integer id) { this.id = id; } public String getNickname() { return nickname; } public void setNickname(String nickname) { this.nickname = nickname; } public String getTelephone() { return telephone; } public void setTelephone(String telephone) { this.telephone = telephone; } public String getPassword() { return password; } public void setPassword(String password) { this.password = password; } @Override public String toString() { return &quot;User [id=&quot; + id + &quot;, nickname=&quot; + nickname + &quot;, telephone=&quot; + telephone + &quot;, password=&quot; + password + &quot;]&quot;; } } 运行登录 注册 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java商城项目（二）]]></title>
    <url>%2F2019%2F06%2F16%2Festoretwo%2F</url>
    <content type="text"><![CDATA[导入.sql到Navicat Premium出现乱码问题 找到MySQL的安装路径，打开my.ini文件，更改如下地方 default-character-set=utf8 character-set-server=utf8 sql-mode=&quot;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION改成sql-mode=&quot;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot; 注：“utf8”而不是“utf-8”，修改成utf-8重新开启MySQL服务器可能造成失败，出现1067错误 MySQL5.5 配置文件 my.ini 1067错误 打开my.ini文件 MySql5.5 Command Line Client出现中文乱码，Navicat正常显示 查看客服端编码格式 解决办法临时解决办法 客服端更改字符集查看字符集编码格式：show variables like &#39;character_set_%&#39;;临时更改字符集：set names gbk； 查看查询结果 注：这种只是临时解决办法，重启客服端将失效！ 长期解决办法 打开my.ini文件更改如下： [client] port=3306 [mysql] default-character-set=gbk character-set-server=utf8 完整配置信息如下： # MySQL Server Instance Configuration File # ---------------------------------------------------------------------- # Generated by the MySQL Server Instance Configuration Wizard # # # Installation Instructions # ---------------------------------------------------------------------- # # On Linux you can copy this file to /etc/my.cnf to set global options, # mysql-data-dir/my.cnf to set server-specific options # (@localstatedir@ for this installation) or to # ~/.my.cnf to set user-specific options. # # On Windows you should keep this file in the installation directory # of your server (e.g. C:\Program Files\MySQL\MySQL Server X.Y). To # make sure the server reads the config file use the startup option # &quot;--defaults-file&quot;. # # To run run the server from the command line, execute this in a # command line shell, e.g. # mysqld --defaults-file=&quot;C:\Program Files\MySQL\MySQL Server X.Y\my.ini&quot; # # To install the server as a Windows service manually, execute this in a # command line shell, e.g. # mysqld --install MySQLXY --defaults-file=&quot;C:\Program Files\MySQL\MySQL Server X.Y\my.ini&quot; # # And then execute this in a command line shell to start the server, e.g. # net start MySQLXY # # # Guildlines for editing this file # ---------------------------------------------------------------------- # # In this file, you can use all long options that the program supports. # If you want to know the options a program supports, start the program # with the &quot;--help&quot; option. # # More detailed information about the individual options can also be # found in the manual. # # # CLIENT SECTION # ---------------------------------------------------------------------- # # The following options will be read by MySQL client applications. # Note that only client applications shipped by MySQL are guaranteed # to read this section. If you want your own MySQL client program to # honor these values, you need to specify it as an option during the # MySQL client library initialization. # [client] port=3306 [mysql] default-character-set=gbk # SERVER SECTION # ---------------------------------------------------------------------- # # The following options will be read by the MySQL Server. Make sure that # you have installed the server correctly (see above) so it reads this # file. # [mysqld] # The TCP/IP Port the MySQL Server will listen on port=3306 #Path to installation directory. All paths are usually resolved relative to this. basedir=&quot;C:/Program Files/MySQL/MySQL Server 5.5/&quot; #Path to the database root datadir=&quot;C:/ProgramData/MySQL/MySQL Server 5.5/Data/&quot; # The default character set that will be used when a new schema or table is # created and no character set is defined character-set-server=utf8 # The default storage engine that will be used when create new tables when default-storage-engine=MYISAM # Set the SQL mode to strict #sql-mode=&quot;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot; sql-mode=&quot;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot; # The maximum amount of concurrent sessions the MySQL server will # allow. One of these connections will be reserved for a user with # SUPER privileges to allow the administrator to login even if the # connection limit has been reached. max_connections=100 # Query cache is used to cache SELECT results and later return them # without actual executing the same query once again. Having the query # cache enabled may result in significant speed improvements, if your # have a lot of identical queries and rarely changing tables. See the # &quot;Qcache_lowmem_prunes&quot; status variable to check if the current value # is high enough for your load. # Note: In case your tables change very often or if your queries are # textually different every time, the query cache may result in a # slowdown instead of a performance improvement. query_cache_size=0 # The number of open tables for all threads. Increasing this value # increases the number of file descriptors that mysqld requires. # Therefore you have to make sure to set the amount of open files # allowed to at least 4096 in the variable &quot;open-files-limit&quot; in # section [mysqld_safe] table_cache=256 # Maximum size for internal (in-memory) temporary tables. If a table # grows larger than this value, it is automatically converted to disk # based table This limitation is for a single table. There can be many # of them. tmp_table_size=18M # How many threads we should keep in a cache for reuse. When a client # disconnects, the client&apos;s threads are put in the cache if there aren&apos;t # more than thread_cache_size threads from before. This greatly reduces # the amount of thread creations needed if you have a lot of new # connections. (Normally this doesn&apos;t give a notable performance # improvement if you have a good thread implementation.) thread_cache_size=8 #*** MyISAM Specific options # The maximum size of the temporary file MySQL is allowed to use while # recreating the index (during REPAIR, ALTER TABLE or LOAD DATA INFILE. # If the file-size would be bigger than this, the index will be created # through the key cache (which is slower). myisam_max_sort_file_size=100G # If the temporary file used for fast index creation would be bigger # than using the key cache by the amount specified here, then prefer the # key cache method. This is mainly used to force long character keys in # large tables to use the slower key cache method to create the index. myisam_sort_buffer_size=35M # Size of the Key Buffer, used to cache index blocks for MyISAM tables. # Do not set it larger than 30% of your available memory, as some memory # is also required by the OS to cache rows. Even if you&apos;re not using # MyISAM tables, you should still set it to 8-64M as it will also be # used for internal temporary disk tables. key_buffer_size=25M # Size of the buffer used for doing full table scans of MyISAM tables. # Allocated per thread, if a full scan is needed. read_buffer_size=64K read_rnd_buffer_size=256K # This buffer is allocated when MySQL needs to rebuild the index in # REPAIR, OPTIMZE, ALTER table statements as well as in LOAD DATA INFILE # into an empty table. It is allocated per thread so be careful with # large settings. sort_buffer_size=256K #*** INNODB Specific options *** innodb_data_home_dir=&quot;F:/mysql/&quot; # Use this option if you have a MySQL server with InnoDB support enabled # but you do not plan to use it. This will save memory and disk space # and speed up some things. #skip-innodb # Additional memory pool that is used by InnoDB to store metadata # information. If InnoDB requires more memory for this purpose it will # start to allocate it from the OS. As this is fast enough on most # recent operating systems, you normally do not need to change this # value. SHOW INNODB STATUS will display the current amount used. innodb_additional_mem_pool_size=2M # If set to 1, InnoDB will flush (fsync) the transaction logs to the # disk at each commit, which offers full ACID behavior. If you are # willing to compromise this safety, and you are running small # transactions, you may set this to 0 or 2 to reduce disk I/O to the # logs. Value 0 means that the log is only written to the log file and # the log file flushed to disk approximately once per second. Value 2 # means the log is written to the log file at each commit, but the log # file is only flushed to disk approximately once per second. innodb_flush_log_at_trx_commit=1 # The size of the buffer InnoDB uses for buffering log data. As soon as # it is full, InnoDB will have to flush it to disk. As it is flushed # once per second anyway, it does not make sense to have it very large # (even with long transactions). innodb_log_buffer_size=1M # InnoDB, unlike MyISAM, uses a buffer pool to cache both indexes and # row data. The bigger you set this the less disk I/O is needed to # access data in tables. On a dedicated database server you may set this # parameter up to 80% of the machine physical memory size. Do not set it # too large, though, because competition of the physical memory may # cause paging in the operating system. Note that on 32bit systems you # might be limited to 2-3.5G of user level memory per process, so do not # set it too high. innodb_buffer_pool_size=47M # Size of each log file in a log group. You should set the combined size # of log files to about 25%-100% of your buffer pool size to avoid # unneeded buffer pool flush activity on log file overwrite. However, # note that a larger logfile size will increase the time needed for the # recovery process. innodb_log_file_size=24M # Number of threads allowed inside the InnoDB kernel. The optimal value # depends highly on the application, hardware as well as the OS # scheduler properties. A too high value may lead to thread thrashing. innodb_thread_concurrency=10 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F06%2F14%2Fjava-reflection%2F</url>
    <content type="text"><![CDATA[Java reflectionReflection（反射）是被视为动态语言的关键，反射机制允许程序在执行期间借助于reflection API获取任何类的内部信息，并直接操作任意对象的内部属性和方法。 Java反射机制提供的功能 在运行时判断任意一个对象所属的类 在运行时构造任意类的对象 在运行时判断任意一个类所具有的成员变量和方法 在运行时调用任意一个类的成员变量和方法 生成动态代理 反射相关的API java.lang.Class 代表一个类 java.lang.reflec.Method 代表类的方法 java.lang.reflect.Field 代表类的成员变量 java.lang.reflect.Constructor 代表类的构造方法]]></content>
  </entry>
  <entry>
    <title><![CDATA[java商城项目（一）]]></title>
    <url>%2F2019%2F06%2F13%2Festoreone%2F</url>
    <content type="text"><![CDATA[运行环境eclipse/myeclipse+mysql+tomcat7以上+jdk1.8+Redis 项目目录结构 导入项目出现的错误eclipse Target runtime Apache Tomcat v8.0 is not defined. 【项目】→【右键】→【build path】→【configure build path】→【libraries】 这里把你的tomcat 改成（Edit）你用的版本 然后 【项目】→【右键】→【Properties】→【Targeted-Runtimes】 把你的tomcat打勾，然后，保存关闭 。 或者点击这个Problems，右击错误描述Delete Java compiler level does not match the version of the installed Java project facet. 点击错误描述，右击选择Quick Fix选择合适的版本 项目运行成功，游览器输入localhost：8080（自己的tomcat端口号）出现Oracle数据库相关字样 tomcat服务器的端口号和安装的Oracle数据库的某个服务端口冲突解决办法有二：1.更改tomcat端口号：tomcat文件→conf→server.xml ` &lt;Connector port=&quot;8090&quot; redirectPort=&quot;8443&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; URIEncoding=&quot;utf-8&quot;/&gt;` 2.关闭oracle端口号Ctrl+Alt+Delete，打开任务管理器→服务→找到相关端口关闭 项目运行成功，游览器输入localhost：8080（自己的tomcat端口号）/项目名/ 显示网络异常出现类似如下错误： 确保项目正常打开但是浏览器不能正常显示项目的页面先用IDE（集成开发环境里）的浏览器打开，以myeclipse为例window→Show View→Web Brower会在项目启动时在IDE中显示项目地址，可能主机名称不是localhost，是一些其他的名称 项目运行结果 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java商城项目（一）]]></title>
    <url>%2F2019%2F06%2F13%2Fjava-errors%2F</url>
    <content type="text"><![CDATA[运行环境eclipse/myeclipse+mysql+tomcat7以上+jdk1.8+Redis 项目目录结构 导入项目出现的错误eclipse Target runtime Apache Tomcat v8.0 is not defined. 【项目】→【右键】→【build path】→【configure build path】→【libraries】 这里把你的tomcat 改成（Edit）你用的版本 然后 【项目】→【右键】→【Properties】→【Targeted-Runtimes】 把你的tomcat打勾，然后，保存关闭 。 或者点击这个Problems，右击错误描述Delete Java compiler level does not match the version of the installed Java project facet. 点击错误描述，右击选择Quick Fix选择合适的版本 项目运行成功，游览器输入localhost：8080（自己的tomcat端口号）出现Oracle数据库相关字样 tomcat服务器的端口号和安装的Oracle数据库的某个服务端口冲突解决办法有二：1.更改tomcat端口号：tomcat文件→conf→server.xml ` &lt;Connector port=&quot;8090&quot; redirectPort=&quot;8443&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; URIEncoding=&quot;utf-8&quot;/&gt;` 2.关闭oracle端口号Ctrl+Alt+Delete，打开任务管理器→服务→找到相关端口关闭 项目运行成功，游览器输入localhost：8080（自己的tomcat端口号）/项目名/ 显示网络异常出现类似如下错误： 确保项目正常打开但是浏览器不能正常显示项目的页面先用IDE（集成开发环境里）的浏览器打开，以myeclipse为例window→Show View→Web Brower会在项目启动时在IDE中显示项目地址，可能主机名称不是localhost，是一些其他的名称 项目运行结果 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java电商项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python函数与模块]]></title>
    <url>%2F2019%2F06%2F09%2FPython-function-module%2F</url>
    <content type="text"><![CDATA[什么是函数把实现某一特定功能的相关语句按某种格式组织在一起形成一个程序单元，这样的一个程序单元叫做函数（function）。函数有时也被成为例程或过程。使用函数的目的： 分解问题，降低编程难度 代码重用 函数的定义格式def 函数名([参数列表])： [函数体]return[返回值列表] 【例】 def say_hello(): print(&quot;hello world!&quot;) say_hello() 运行结果： hello world! Process finished with exit code 0 【例】定义函数计算最大值 def maxnum(x,y): if x&gt;y: return x elif x==y: return &quot;两数相等&quot; else: return y （# a=input(&quot;input a:&quot;)） （# b=input(&quot;input b:&quot;)） a,b=input(&quot;input a b:&quot;).split(&quot;-&quot;) print(maxnum(a,b)) 运行结果： input a b:12-34 34 Process finished with exit code 0 模块及其应用模块的定义及引用Python模块（module）是一个python文件，以.py结尾，包含了Python对象定义和Python语句。 例 support.py def print_func(): print(str) print(&quot;hello&quot;) return 模块的分类 系统内置模块，例如：sys、time、json模块 自定义模块 开源模块，通过pip install进行安装 注：自定义模块命名不能和系统内置的模块重名，否则无法再导入系统模块 模块的使用 模块的引用 方式一：import 模块名 import math print(math.cos(60)) 方式二：from 模块名 import 函数名 from math import cos print(cos(60) 包每一个Python的包目录下面都会有名为init.py的特殊文件，该文件可以为空，但必须存在。 包、模块、函数之间的关系 包（模块1（函数，类），模块2（函数，类），……） 练习 1.验证哥德巴赫猜想：一个不小于7的偶数可以表示两个素数的和 import math def isprime(n): # 判断素数 if n == 1: return False elif n == 2: return True else: for i in range(2, int(math.sqrt(n) + 1)): if n % i == 0: return False return True def thonsand(n): # 生成若干个素数，返回素数list a = [] for i in range(1, n + 1): if isprime(i): a.append(i) return a &quot;&quot;&quot;利用前面的两个函数生成n范围内的素数列表 两层for循环，两个迭代变量之和如果等于参数n就加入列表中 循环完所有的情况后返回列表，并打印输出。 &quot;&quot;&quot; def gdbh(n): a = [] ls = thonsand(n) for i in ls: for j in ls: if n == i + j: a.append(i) a.append(j) return a ls2 = gdbh(8) ls3 = gdbh(152) print(ls2) print(ls3) 运行结果： [3, 5, 5, 3] [3, 149, 13, 139, 43, 109, 73, 79, 79, 73, 109, 43, 139, 13, 149, 3] Process finished with exit code 0 2.编写一个判断字符串是否是回文的函数 s = input(&apos;请输入一个字符串：&apos;) if not s: print(&apos;请不要输入空字符串！&apos;) s = input(&apos;请重新输入一个字符串：&apos;) a = len(s) i = 0 count = 1 while i &lt;= (a/2): if s[i] == s[a-i-1]: count = 1 i += 1 else: count = 0 break if count == 1: print(&apos;您所输入的字符串是回文&apos;) else: print(&apos;您所输入的字符串不是回文&apos;) 运行结果： 请输入一个字符串：&gt;? 请不要输入空字符串！ 请重新输入一个字符串：&gt;? www 您所输入的字符串是回文 exit() Process finished with exit code 0 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python 第三章：Python函数与模块</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python语言基础]]></title>
    <url>%2F2019%2F06%2F08%2FPython-BasicKnowledge%2F</url>
    <content type="text"><![CDATA[常量import math print(math.pi) 结果:3.141592653589793 基本数据类型 数字 int(整型)【32位操作系统，整数是32位，取值范围为-2^31~2^31-1;64位操作系统，整数是64位，取值范围为-2^63~2^63-1】 long(长整型) float（浮点型） bool（布尔） 字符串 列表、元祖、集合、字典 变量变量的命名 变量名只能包含字母、数字、下划线。变量名可以字母、下划线开头，不能以数字开头。 变量名不能白喊空格，可以使用下划线进行分割 不能讲关键字作为变量名 运算符与表达式1.算术运算符2.比较（关系）运算符3.赋值运算符4.逻辑运算符5.按位运算符6.成员运算符7.身份运算符 程序控制语句 顺序控制语句 选择控制语句 循环控制语句 if-elif-else语句 【例】根据年龄段收取费用：4岁以下免费4~18岁收费50元18以上收费100元 age=eval(input(&quot;输入您的年龄:&quot;)) if age&lt;4: price=0 elif age&lt;18: price=50 else : price=100 print(&quot;您的年龄为&quot;&quot;需要缴纳&quot;+str(price)+&quot;元&quot;) 运行结果：输入您的年龄:12您的年龄为需要缴纳50元 for循环 【例】 list=[&quot;www&quot;,&quot;ljcn&quot;,&quot;xyz&quot;] for i in list: print(i) 运行结果： C:\python3.7\python.exe F:/Pyworkspace/test01/test01.py www ljcn xyz Process finished with exit code 0 while循环i=eval(input(&quot;请输入一位数：&quot;)) while i&lt;6: print(i) i+=1 print(i) 运行结果 ： 请输入一位数：3 3 4 4 5 5 6 Process finished with exit code 0 练习 猜字游戏：提前设定一个100内的整数，根据用户输入给出提示，比实际数大了还是小了。如果用户猜对了，输出“恭喜你猜对了”并结束游戏 secret = 66 print(&apos;------猜数字游戏！-----&apos;) guess = 0 while guess != secret: temp = input(&apos;请输入数字：&apos;) guess = int(temp) if guess &gt; secret: print(&apos;您输入的数字大了！&apos;) elif guess &lt;secret: print(&apos;您输入的数字小了！&apos;) else: print(&apos;恭喜，您猜对了！&apos;) print(&apos;游戏结束，再见！^_^&apos;) 运行结果： ------猜数字游戏！----- 请输入数字一位100以内的数字：33 您输入的数字小了！ 请输入数字一位100以内的数字：99 您输入的数字大了！ 请输入数字一位100以内的数字：66 恭喜，您猜对了！ 游戏结束，再见！^_^ Process finished with exit code 0 2.使用while循环，打印十个100以内的随机数，并在循环结束后打印最大值和最小值 import numpy as np num=0 while num&lt;1: num+=1 list=np.random.randint(1,100,size=10) print(&quot;————随机生成10个1-100的数————&quot;) print(list) print(&quot;————生成有序集合————&quot;) list2=sorted(list) print(list2) print(&quot;————打印最大值————&quot;) print(list2[9]) 运行结果： ————随机生成10个1-100的数———— [89 22 57 44 65 47 63 66 57 10] ————生成有序集合———— [10, 22, 44, 47, 57, 57, 63, 65, 66, 89] ————打印最大值———— 89 Process finished with exit code 0 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python 第二章：Python语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python概述]]></title>
    <url>%2F2019%2F06%2F08%2FPython-Summarize%2F</url>
    <content type="text"><![CDATA[Python语言类型Python是一种计算进程序设计语言，是一种解释型、面向对象、动态数据类型的高级程序设计语言。最初，被设计用于编写自动化脚本（shell）。Python的创始人是荷兰人——Guido van Rossum（吉多 范罗苏姆），于1989年开始写Python语言的编译器 Python的运用领域 Web开发 网络爬虫 计算与数据分析 人工智能 自动化运维 云计算 网络编程 游戏开发 Python语言特点Python语言的优点 简单 易学 开源 可移植性强 解释性 可扩展性、可嵌入性 丰富的第三方库 代码规范（采用强制缩进的方式） Python运行机制Python先把代码（.py文件）编译成字节码文件，交给字节码虚拟机，然后虚拟机一条一条的执行字节码指令，从而完成程序的执行。字节码在Python虚拟机程序里对应的是PyCodeObject对象。.pyc文件是字节码在磁盘上的表现形式。 Python注释 单行注释（# xxx） 多行注释（’’’ xxx ‘’’） 中文注释 “#coding=utf-8” “#coding=gbk” import语句1.import（关键字） module1,module2……（模块） import math import导入模块建议顺序 Python标准库模块 Python第三方模块 自定义模块 2.from-import语句from module import name from math import floor Python编程规范1.缩进2.每个import语句值导入一个模块，最好按标准库、扩展库、自定义库的顺序进行导入3.最好在每个类、函数定义和一段完整的功能代码之后加空格4.如果语句过长，使用续行符“\”或者是“（）”5.用“（）”来避免由于优先级造成的错误6.注释 练习题目：利用input输入三个数值，并求和（float函数可以将字符串转换成单精度浮点数） 输入数字 Python 3 通过 input() 获取的任何内容都是 str（字符串）类型。 str1 = input(&apos;请输入第1个数：&apos;) str2 = input(&apos;请输入第2个数：&apos;) str3 = input(&apos;请输入第3个数：&apos;) 用 int() 函数强制将 str 转换成 int num1 = float(str1) num2 = float(str2) num3= float(str3) 加法运算并打印 print(&apos;{0} + {1} +{2} = {3}&apos;.format(num1, num2,num3,num1 + num2+num3)) 运行结果： 请输入第1个数：1 请输入第2个数：2 请输入第3个数：3 1.0 + 2.0 +3.0 = 6.0 Process finished with exit code 0 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python 第一章：Python概述</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[XShell远程连接阿里云服务器（CentOS）]]></title>
    <url>%2F2019%2F06%2F06%2Fxshell-aliyun%2F</url>
    <content type="text"><![CDATA[XShellXshell是一个强大的安全终端模拟软件，它支持SSH1, SSH2, 以及Microsoft Windows 平台的TELNET 协议。Xshell 通过互联网到远程主机的安全连接以及它创新性的设计和特色帮助用户在复杂的网络环境中享受他们的工作。Xshell可以在Windows界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。除此之外，其还有丰富的外观配色方案以及样式选择。（百度百科） 获取XShellXShell是一款收费软件，现在已经更新到XSHell6了。 你可以免费试用30天 你可以花钱购买 如果只是学习，申请一个家庭/学校免费版的就够了 家庭/学校免费版获取获取地址 填写姓名 填写邮件（会通过邮箱的方式发送下载链接） 选择你的需求 XShell Xftp 两者 远程连接（秘钥连接）有多种连接方式，这里只介绍采用秘钥连接的方式进行演示。其中，秘钥连接有服务器端生成秘钥，XShell导入秘钥文件；另外一种是XShell生成秘钥，服务器导入秘钥文件。 第一种，XShell生成秘钥（一连接远程主机，进行SSH用户身份验证） 浏览-&gt;用户秘钥-&gt;生成 生成后记得保存*.pem文件 服务器端导入秘钥文件 第二种，服务器端生成秘钥文件，XShell导入秘钥文件进行连接登录 远程连接-&gt;秘钥管理 XShell导入秘钥文件 预览-&gt;文件 输入密码 连接成功 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>XShell</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android新闻客户端]]></title>
    <url>%2F2019%2F06%2F01%2FAndroid%E6%96%B0%E9%97%BB%E5%AE%A2%E6%88%B7%E7%AB%AF%2F</url>
    <content type="text"><![CDATA[什么是AppServAppServ 是 PHP 网页架站工具组合包，作者将一些网络上免费的架站资源重新包装成单一的安装程序，以方便初学者快速完成架站，AppServ 所包含的软件有：Apache、Apache Monitor、PHP、MySQL、phpMyAdmin等。为帮助大家能够迅速的在本地试用EcShop软件，我们编写如下文档。如果您的本地机器没有安装过apache、php、mysql等系统，那么用这个软件则可以让你迅速搭建完整的底层环境。（百度百科） AppServ的获取与安装下载地址 安装 点击“DOWNLOAD”→解压→双击.exe文件安装 安装成功效果 浏览器输入 localhost 检查是否安装成功 AppServ结构简单介绍 AppServ结构 Apache24是Apache的一个服务器 Apache Web Server的目录结构 apache / bin主Apache程序。 apache / conf Apache配置文件。 apache / error Apache错误模板（仅在Apache2.x上找到）。 apache / icons Apache图标。 apache / logs Apache日志文件。 apache / modules Apache模块。 Mysql是数据库（如果本地已安装mysql数据库，确定这里数据库的版本信息，防止因版本冲突造成的不便） mysql / bin主MySQL数据库执行文件。 mysql / data MySQL数据库存储。 mysql / share MySQL错误消息。 php目录结构 php PHP命令行执行和DLL库。 用于PHP的php / ext PECL PHP扩展（仅限PHP5）。 php / extension用于PHP的PECL PHP扩展（仅在PHP 4上找到）。 用于PHP的php / PEAR PEAR框架组件。 www文件存储的目录结构。 www网页文件的目录根。 www / cgi-bin CGI文件目录。 www / phpMyAdmin phpMyAdmin程序目录。 www / appserv AppServ文件，您可以在安装后将其删除。 www / index.php AppServ index.php文件，您可以在安装后将其删除。 环境搭建数据库准备 接下来，设计数据库或者导入已有的数据（这里不做进一步说明） 将数据库中的数据转化为json数据（PHP语言） 连接数据库的文件xxx.php 具体用于创建json数据的xxx.php将PHP文件放入www目录下 输入http://localhost/NewsDemo/getNewsJSON.php Android客户端实现源码：搜索关注微信公众号“原味工厂”，或文章结尾扫码关注！回复：20190601， 即可获取！ 项目结构 更改服务器地址 http://localhost/NewsDemo/getNewsJSON.php http://127.0.0.1/NewsDemo/getNewsJSON.php http://10.0.0.2/NewsDemo/getNewsJSON.php http://10.0.2.2/NewsDemo/getNewsJSON.php运行效果更改logo效果更改背景图效果若无效果 检查服务器地址是否正确 成功返回数据库数据 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>PHP</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>AppServ</tag>
        <tag>Android</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AppServ登录phpMyAdmin错误]]></title>
    <url>%2F2019%2F05%2F31%2FAppServ%2F</url>
    <content type="text"><![CDATA[错误信息 #2002——&amp;mdash；服务器没有响应（或本地服务器的套接字没有正确设置）。 问题分析 网上有很多与#2002相关的解决方案，主要的是更改相关配置 AppServ→www→phpMyAdmin→config.sample.inc 造成#2020错误的原因有很多，这种方式只能解决造成这一错误的一种情况 按照网上的方法添加了相关信息，但是问题没有得到解决 问题解决 由于我电脑里还装了MySQL的其他版本，猜想是端口冲突造成的 找到了问题的根源，没有开启MySQL服务 mysql57是服务器内置的MySQL MySQL是自己安装的MySQL版本 其他 开启MySQL57，问题解决 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>PHP</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>AppServ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AppServ登录phpMyAdmin错误]]></title>
    <url>%2F2019%2F05%2F31%2FAppServ%232002%2F</url>
    <content type="text"><![CDATA[错误信息 #2002——&amp;mdash；服务器没有响应（或本地服务器的套接字没有正确设置）。 问题分析 网上有很多与#2002相关的解决方案，主要的是更改相关配置 AppServ→www→phpMyAdmin→config.sample.inc 造成#2020错误的原因有很多，这种方式只能解决造成这一错误的一种情况 按照网上的方法添加了相关信息，但是问题没有得到解决 问题解决 由于我电脑里还装了MySQL的其他版本，猜想是端口冲突造成的 找到了问题的根源，没有开启MySQL服务 mysql57是服务器内置的MySQL MySQL是自己安装的MySQL版本 其他 开启MySQL57，问题解决 END 更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>PHP</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>AppServ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云（CentOS）安装MySQL]]></title>
    <url>%2F2019%2F05%2F29%2FLinux-MySQL%2F</url>
    <content type="text"><![CDATA[可以通过输入“sudo su root”切换至root账号下面的一些操作都是在root用户下完成的。 [admin@izwz9gwtq4y4p311j81i6fz ~]$ sudo su root [root@izwz9gwtq4y4p311j81i6fz admin]# 安装步骤①安装MySQL官方的Yum Repository [root@izwz9gwtq4y4p311j81i6fz admin]# wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm ②下载rpm包 [root@izwz9gwtq4y4p311j81i6fz admin]#yum -y install mysql57-community-release-el7-10.noarch.rpm ③安装MySQL服务 [root@izwz9gwtq4y4p311j81i6fz admin]#yum -y install mysql-community-server ④启动mysql服务 [root@izwz9gwtq4y4p311j81i6fz admin]#systemctl start mysqld.service ⑤查看状态 [root@izwz9gwtq4y4p311j81i6fz admin]#systemctl status mysqld.service 初始化设置①查看原始密码 [root@izwz9gwtq4y4p311j81i6fz admin]#vi /var/log/mysqld.log 找到： 2019-05-29T00:47[Note] A temporary password is generated for root @localhost: At#qydoUG2ae 初始化密码：At#qydoUG2ae ②更改初始密码 [root@izwz9gwtq4y4p311j81i6fz admin]#mysqladmin -u root -p&apos;旧密码&apos; password &apos;新密码&apos; 注：若密码设置简单，或有警告和提示密码更改失败 vim /etc/my.cnf， 增加这么一行validate_password=off 重启MySQL systemctl restart mysqld 登录MySQL[root@izwz9gwtq4y4p311j81i6fz admin]#mysql -u root -p 提示输入密码Enter password: 登录成功： 退出MySQLmysql&gt;exit END更多精彩内容，欢迎扫码关注“原味工厂”]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux-MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyBatis与传统JDBC]]></title>
    <url>%2F2019%2F05%2F21%2FMyBatis%EF%BC%881%EF%BC%89%2F</url>
    <content type="text"><![CDATA[传统JDBC开发模式的缺陷JDBC（Java DataBase Connectivity）即“Java数据库连接”，是一种提供连接数据库，使用SQL语句操作数据库数据的技术的标准Java API。在传统Jsp/Servlet开发模式下，一般直接使用JDBC进行数据库的连接和操作。引入相关数据库驱动jar包，创建数据库连接类，该类数据库驱动的加载、数据库连接参数配置、连接对象的获取以及连接对象的关闭操作。 硬编码问题//定义mysql的数据库驱动程序 public static final String DBDRIVER=&quot;org.gjt.mm.mysql.Driver&quot;; //定义mysql的数据库连接地址 public static final String DBURL=&quot;jdbc.mysql://localhost:3306/my&quot;; //数据库连接用户名 public static final String DBUSER=&quot;root&quot;; //连接密码 public static final String DBPASS=&quot;root&quot;; 可以看到，数据库驱动程序名称、数据库连接地址、数据库账号及密码都是硬编码到程序中。 什么是硬编码将程序中的外部变量值，使用赋值语句写死在程序中，当需要修改时，要修改源码并重新编译。扩展性差。 待优化问题 连接参数，sql语句的硬编码问题：将sql语句配置在xml或其他非java的配置文件，可以避免修改配置后，重新编译java文件。 数据库的频繁连接与断开 ：使用数据库连接池来管理数据的连接。 查询结果集取数据的硬编码 ：使用一种机制，将查询出的结果集自动映射成java对象，无需手动配置。 什么是MyBatis？MyBatis是一款优秀的持久层框架，它支持定制化SQL存储过程以及高级映射，MyBatis避免了所有的JDBC代码和手动设置参数以及获取结果集。MyBatis可以使用简单的XML或注解来配置合映射原生信息，将接口和Java的pojos（Plain Old Java Objects 普通Java对象）映射成数据库中的记录。 mybatis特点 ：采用配置文件动态管理sql语句，含有输入、输出映射机制以及数据库连接池配置的持久层框架。 mybatis整体架构 数据源配置文件（SqlMapConfig.xml）(文件名可更改) sql映射配置文件（xxxMapper.xml）(文件名可更改) 会话工厂(SqlSessionFactory) 会话(SqlSession) 执行器(EXcutor) 底层封装对象(Statement) mybatis运行流程mybatis的整个运行流程仅仅围绕数据库连接池配置文件SqlMapConfig.xml以及sql映射配置文件Mapper.xml开展。 首先，SqlSessionFactory会话工厂会通过Resources资源信息加载对象获取SqlMapConfig.xml配置文件信息；然后，产生可以与数据库进行交互的会话实例类SqlSession。会话实例类SqlSession可以根据Mapper位置文件的SQL配置，去执行相应的增删改查操作。而在会话实例类SqlSession内部，是通过执行器Executor（基本执行器和缓存执行器）对数据库进行操作。执行器与数据库交互依靠的是底层封装对象Mappered Statement，它封装了从Mapper文件中读取的信息（包括Sql语句、执行参数、输出结果类型）。通过执行器Executor与底层封装对象Mappered Statement的结合，MyBatis实现了与数据库进行交互的功能。 SqlMapConfig.xml:配置数据库连接信息、事务等。配置了包含SQL语句的映射文件集合（Mapper文件） Mappere.xml：配置SQL语句、输入参数和输出结果类型等配置信息 SqlSessionFactory：会话工厂，根据资源加载类获取数据库配置文件信息而生成。作用：生成SqlSession会话对象 SqlSession:由SqlSessionFactory生成。作用：操作数据库 Executor：执行器（分为基本执行器和缓存执行器），是一个接口，为SqlSession执行数据库操作 Mappered Statement：底层封装对象，对操作数据库的信息进行封装（包括SQL语句、输入参数、输出结果类型） 输入参数类型： Java简单类型 HashMap类型 pojo自定义包装类型 输出结果类型: Java简单类型 HashMap类型 pojo自定义包装类型 END更多精彩内容，欢迎扫码关注微信公众号]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis（1）</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中浅谈"equals"和"=="]]></title>
    <url>%2F2019%2F05%2F12%2Fequals%20%E5%92%8C%20%3D%3D%2F</url>
    <content type="text"><![CDATA[“equals”和“==”怎么区分使用，什么时候使用equals（）？什么时候使用 “==” ？ “==”使用场景 如果两个变量是基本数据类型，可以直接使用“==”运算符来比较数值是否相等。 如果是引用数据类型（对象），这里涉及两块内存，对象存储在对内存中，变量占用另外一块内存。如果要比较两个对象是否指向同一个对象，看这两个对象是否指向同一块存储空间 例如： String s=new String(); `new String()占用一块内存 变量s占用一块内存` 此时，变量s所对应内存中存储的数值就是对象占用的那块地址的首地址 基本数据类型：byte、int、long、short、float、double、char、boolean（比较值）引用数据类型：类（包括对象）、接口、数组（比较的是他们在内存中的存放地址） equals使用场景equals是Object提供的方法，每个类都继承至Object，所以都具有equals方法。 没有覆盖的equals底层也是使用“==”运算符比较两个对象 boolean equals（Object object）{ return this==object； } “==”和equals比较相比较“==”运算符，equals方法可以被覆盖，可以通过覆盖，让他比较数据内容而不是引用比较堆中内容是否相等 new 两个对象： String s1=new Strig(&quot;www.ljcn.xyz&quot;); String s2=new Strig(&quot;www.ljcn.xyz&quot;); 这是俩个不同的对象，首地址不同s1=s2；返回falses1.equals(s2);返回true 最后如果编写的类希望比较该类创建的两个实例对象的内容是否相同，需覆盖equals方法！]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>equals和==</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基本数据类型转换]]></title>
    <url>%2F2019%2F04%2F25%2F%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[java八种基本数据类型 基本数据类型转换if(两个操作数中有一个是double类型){ 另一个操作数就会转换成double类型； }else if（两个操作数中有一个是float类型）{ 另一个操作数就会转换成float类型； }else if（两个操作数中有一个是long类型）{ 另一个操作数就会转换成flong类型； }else{ 两个操作数都被转换成int类型； } 蓝色箭头代表无精度丢失的转换黄色箭头表示可能有精度丢失的转换 强制类型转换例如，将double类型的数值转换成int类型，需要通过强制类型转换（cast）实现。 double test=1.111； int test2=（int）test； 注意：如果试图将一个数值从一种数据类型强制转换成另外一种数据类型，同时超过了目标类型的表示范围，结果会截取成完全不同的数值。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>基本数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ajax学习]]></title>
    <url>%2F2019%2F04%2F24%2FAjax%2F</url>
    <content type="text"><![CDATA[什么是Ajax？ Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。 Ajax = 异步 JavaScript 和 XML 或者是 HTML（标准通用标记语言的子集）。 Ajax 是一种用于创建快速动态网页的技术。 Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。 使用流程 创建ajax引擎对象var ajax; if(window.XMLHttpRequest){ ajax=new XMLHttpRequest(); }else if(window.ActiveXObject(&quot;Msxml2.XMLHTTP&quot;)); 复写onreadystatechange函数 ajax.onreadystatechange(){} 判断ajax状态码 0 （未初始化）还没有调用send()方法 1 （载入）已调用send()方法，正在发送请求 2 （载入完成）send()方法执行完成，已经接收到全部响应内容 3 （交互）正在解析响应内容 4 （完成）响应内容解析完成，可以在客户端调用了if(ajax.readyState==4){} 判断响应状态码 200 请求成功 404 资源未找到 500 内部服务器错误if(ajax.status==200){} 获取响应内容var result=ajax.responseText; 处理响应内容发送请求 get方式ajax.open(&quot;get&quot;, &quot;AjaxTest?name=ljc&amp;pwd=123&quot;); ajax.send(null); post方式 ajax.open(&quot;post&quot;, &quot;AjaxTest&quot;); ajax.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); ajax.send(&quot;name=ljc&amp;pwd=123&quot;); 部分代码&lt;script type=&quot;text/javascript&quot;&gt; function ajaxReq(){ //创建ajax对象 var ajax; if(window.XMLHttpRequest){ ajax=new XMLHttpRequest(); }else if(window.ActiveXObject(&quot;Msxml2.XMLHTTP&quot;)); //复写onreadystatechange函数 ajax.onreadystatechange(){ //判断ajax状态码 if(ajax.readyState==4){ //判断响应状态码 if(ajax.status==200){ //获取响应内容 var result=ajax.responseText; //处理响应内容 alert(result); } } } //发送请求 //get方式 ajax.open(&quot;get&quot;, &quot;AjaxTest?name=ljc&amp;pwd=123&quot;); ajax.send(null); //post方式 //ajax.open(&quot;post&quot;, &quot;AjaxTest&quot;); //ajax.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); //ajax.send(&quot;name=ljc&amp;pwd=123&quot;); } &lt;/script&gt;]]></content>
      <categories>
        <category>Ajax</category>
      </categories>
      <tags>
        <tag>Ajax</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客，实现评论功能]]></title>
    <url>%2F2019%2F04%2F17%2F%E8%AF%84%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[评论的相关插件 多说（凉凉了） Hypercomments 来必力 Gitment …… 我的博客用的是Valine+leancloud Leancloud官网 注册登陆就不啰里啰唆了，绑定邮箱并验证就可以使用了 创建应用——&gt;选择开发板——&gt;创建 设置——&gt;应用key App ID App Key 进入 安全中心——&gt;Web安全域名 ![](https://i.loli.net/2019/04/17/5cb72983f151f.png 填上自己的仓库地址 如果有域名写上自己的域名 有域名一定要写，不然评论会报错 Valine配置下载Valine.min.js代码到本地：下载地址 鼠标右击另存为，将下载好的文件放在next\source\js\src 配置valine：next\layout_third-party\comments\valine.swig {% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %} //调用刚下载的本地文件以加速加载速度 {% set valine_uri = '/js/src/Valine.min.js' %} //这里改为从本地加载 {% if theme.vendors.valine %} {% set valine_uri = theme.vendors.valine %} {% endif %} &lt;script src=&quot;{{ valine_uri }}&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var GUEST = [&apos;nick&apos;,&apos;mail&apos;,&apos;link&apos;]; var guest = &apos;{{ theme.valine.guest_info }}&apos;; guest = guest.split(&apos;,&apos;).filter(function (item) { return GUEST.indexOf(item)&gt;-1; }); new Valine({ el: &apos;#comments&apos; , verify: {{ theme.valine.verify }}, notify: {{ theme.valine.notify }}, appId: &apos;{{ theme.valine.appid }}&apos;, appKey: &apos;{{ theme.valine.appkey }}&apos;, placeholder: &apos;{{ theme.valine.placeholder }}&apos;, avatar:&apos;{{ theme.valine.avatar }}&apos;, guest_info:[&apos;nick&apos;] , //评论者只需要提供评论的昵称即可 pageSize:&apos;{{ theme.valine.pageSize }}&apos; || 10, }); //增加以下六行代码去除 power by valine var infoEle = document.querySelector(&apos;#comments .info&apos;); if (infoEle &amp;&amp; infoEle.childNodes &amp;&amp; infoEle.childNodes.length &gt; 0){ infoEle.childNodes.forEach(function(item) { item.parentNode.removeChild(item); }); } &lt;/script&gt; {% endif %}12345678910111213141516- 修改主题配置文件_config.yml # valine: enable: true //打开valine评论功能 appid: 你的leancloud appid appkey: 你的leancloud appkey notify: false //邮件提醒 verify: true //评论时是否有验证码，需要在Leancloud 设置-&gt;安全中心 中打开 placeholder: 说点什么吧！ //评论框默认显示 avatar: hide //评论者的头像,我这里设置的不显示 guest_info: nick # custom comment header pageSize: 10 # pagination size 实现效果如下↓↓↓]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>评论实现</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为github pages博客添加域名]]></title>
    <url>%2F2019%2F04%2F17%2F%E5%9F%9F%E5%90%8D%2F</url>
    <content type="text"><![CDATA[首先将本地的博客项目上传至托管平台 github gitee 服务器 …… 笔者将博客项目上传至github上项目仓库地址 https://silly-bird.github. https://www.ljcn.xyz 当然，绑定域名之后，输入https://silly-bird.github之后访问的也是https://www.ljcn.xyz 博客的创建的过程网上有很多的教程，可谓是五花八门，笔者提示一点注意版本问题意思是：有些命令或者配置参数有可能发生变更，如果有什么问题可以给我留言，我尽可能帮助！ 域名绑定我也是当时碰到腾讯做活动，买了一个域名，主要是想尝试一下绑定域名的整个过程 购买域名 实名认证（时间不是很久） 解析域名： 记录类型：CNAME 主机记录：www 记录值：填上你代码的托管地址，例如：silly-bird.github.io 记录类型（A、 MX、 TXT等等）和主机记录说明（@、 *、 mail等等） 添加CNAME文件添加路径：博客文件的source下，例如： 内容为购买的域名，例如：www.ljcn.xyz 最后最后，提交更新到托管平台]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>Markdown</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[编辑好手-Markdown]]></title>
    <url>%2F2019%2F04%2F12%2Fmarkdown%E4%B8%8A%E6%89%8B%2F</url>
    <content type="text"><![CDATA[下载地址 激活——进入enter key 邮箱地址：Soar360@live.com 激活码：GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==【报错】缺少插件插件下载下载安装该插件修改语言工具-&gt;选项-&gt;语言关于图片插入问题 Markdown点击插入图片无法显示（或无法正常显示） 使用图床，将本地图片上传 类似的工具软件有： MPic 七牛云 PicGo SM.MS（笔者正在用的这个，简单高效）SM.MS地址 The End]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[本地web项目，通过内网穿透，实现公网访问]]></title>
    <url>%2F2019%2F04%2F07%2F%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%2F</url>
    <content type="text"><![CDATA[什么是内网穿透？内网穿透即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口,能让外网的电脑找到处于内网的电脑,提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。NAT穿透，nat穿透中有关于网络穿透的详细信息。 内网穿透工具有哪些？ Ngrok Sunny-Ngrok Frp 花生壳 …… 将基于hexo搭建的博客实现内网穿透（Sunny-Ngrok实现）点我进入Sunny-Ngrok 未完待续———————————————————————————————————————————— 我的另一篇博客有详细的说明，欢迎访问！]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>windows</tag>
      </tags>
  </entry>
</search>
