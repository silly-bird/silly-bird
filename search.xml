<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java中浅谈"equals"和"=="]]></title>
    <url>%2F2019%2F05%2F12%2Fequals%20%E5%92%8C%20%3D%3D%2F</url>
    <content type="text"><![CDATA[“equals”和“==”怎么区分使用，什么时候使用equals（）？什么时候使用 “==” ？ “==”使用场景 如果两个变量是基本数据类型，可以直接使用“==”运算符来比较数值是否相等。 如果是引用数据类型（对象），这里涉及两块内存，对象存储在对内存中，变量占用另外一块内存。如果要比较两个对象是否指向同一个对象，看这两个对象是否指向同一块存储空间 例如： String s=new String(); `new String()占用一块内存 变量s占用一块内存` 此时，变量s所对应内存中存储的数值就是对象占用的那块地址的首地址 基本数据类型：byte、int、long、short、float、double、char、boolean（比较值）引用数据类型：类（包括对象）、接口、数组（比较的是他们在内存中的存放地址） equals使用场景equals是Object提供的方法，每个类都继承至Object，所以都具有equals方法。 没有覆盖的equals底层也是使用“==”运算符比较两个对象 boolean equals（Object object）{ return this==object； } “==”和equals比较相比较“==”运算符，equals方法可以被覆盖，可以通过覆盖，让他比较数据内容而不是引用比较堆中内容是否相等 new 两个对象： String s1=new Strig(&quot;www.ljcn.xyz&quot;); String s2=new Strig(&quot;www.ljcn.xyz&quot;); 这是俩个不同的对象，首地址不同s1=s2；返回falses1.equals(s2);返回true 最后如果编写的类希望比较该类创建的两个实例对象的内容是否相同，需覆盖equals方法！]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>equals和==</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基本数据类型转换]]></title>
    <url>%2F2019%2F04%2F25%2F%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[java八种基本数据类型 基本数据类型转换if(两个操作数中有一个是double类型){ 另一个操作数就会转换成double类型； }else if（两个操作数中有一个是float类型）{ 另一个操作数就会转换成float类型； }else if（两个操作数中有一个是long类型）{ 另一个操作数就会转换成flong类型； }else{ 两个操作数都被转换成int类型； } 蓝色箭头代表无精度丢失的转换黄色箭头表示可能有精度丢失的转换 强制类型转换例如，将double类型的数值转换成int类型，需要通过强制类型转换（cast）实现。 double test=1.111； int test2=（int）test； 注意：如果试图将一个数值从一种数据类型强制转换成另外一种数据类型，同时超过了目标类型的表示范围，结果会截取成完全不同的数值。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>基本数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ajax学习]]></title>
    <url>%2F2019%2F04%2F24%2FAjax%2F</url>
    <content type="text"><![CDATA[什么是Ajax？ Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。 Ajax = 异步 JavaScript 和 XML 或者是 HTML（标准通用标记语言的子集）。 Ajax 是一种用于创建快速动态网页的技术。 Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。 使用流程 创建ajax引擎对象var ajax; if(window.XMLHttpRequest){ ajax=new XMLHttpRequest(); }else if(window.ActiveXObject(&quot;Msxml2.XMLHTTP&quot;)); 复写onreadystatechange函数 ajax.onreadystatechange(){} 判断ajax状态码 0 （未初始化）还没有调用send()方法 1 （载入）已调用send()方法，正在发送请求 2 （载入完成）send()方法执行完成，已经接收到全部响应内容 3 （交互）正在解析响应内容 4 （完成）响应内容解析完成，可以在客户端调用了if(ajax.readyState==4){} 判断响应状态码 200 请求成功 404 资源未找到 500 内部服务器错误if(ajax.status==200){} 获取响应内容var result=ajax.responseText; 处理响应内容发送请求 get方式ajax.open(&quot;get&quot;, &quot;AjaxTest?name=ljc&amp;pwd=123&quot;); ajax.send(null); post方式 ajax.open(&quot;post&quot;, &quot;AjaxTest&quot;); ajax.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); ajax.send(&quot;name=ljc&amp;pwd=123&quot;); 部分代码&lt;script type=&quot;text/javascript&quot;&gt; function ajaxReq(){ //创建ajax对象 var ajax; if(window.XMLHttpRequest){ ajax=new XMLHttpRequest(); }else if(window.ActiveXObject(&quot;Msxml2.XMLHTTP&quot;)); //复写onreadystatechange函数 ajax.onreadystatechange(){ //判断ajax状态码 if(ajax.readyState==4){ //判断响应状态码 if(ajax.status==200){ //获取响应内容 var result=ajax.responseText; //处理响应内容 alert(result); } } } //发送请求 //get方式 ajax.open(&quot;get&quot;, &quot;AjaxTest?name=ljc&amp;pwd=123&quot;); ajax.send(null); //post方式 //ajax.open(&quot;post&quot;, &quot;AjaxTest&quot;); //ajax.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); //ajax.send(&quot;name=ljc&amp;pwd=123&quot;); } &lt;/script&gt;]]></content>
      <categories>
        <category>Ajax</category>
      </categories>
      <tags>
        <tag>Ajax</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客，实现评论功能]]></title>
    <url>%2F2019%2F04%2F17%2F%E8%AF%84%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[评论的相关插件 多说（凉凉了） Hypercomments 来必力 Gitment …… 我的博客用的是Valine+leancloud Leancloud官网 注册登陆就不啰里啰唆了，绑定邮箱并验证就可以使用了 创建应用——&gt;选择开发板——&gt;创建 设置——&gt;应用key App ID App Key 进入 安全中心——&gt;Web安全域名 ![](https://i.loli.net/2019/04/17/5cb72983f151f.png 填上自己的仓库地址 如果有域名写上自己的域名 有域名一定要写，不然评论会报错 Valine配置下载Valine.min.js代码到本地：下载地址 鼠标右击另存为，将下载好的文件放在next\source\js\src 配置valine：next\layout_third-party\comments\valine.swig {% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %} //调用刚下载的本地文件以加速加载速度 {% set valine_uri = '/js/src/Valine.min.js' %} //这里改为从本地加载 {% if theme.vendors.valine %} {% set valine_uri = theme.vendors.valine %} {% endif %} &lt;script src=&quot;{{ valine_uri }}&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var GUEST = [&apos;nick&apos;,&apos;mail&apos;,&apos;link&apos;]; var guest = &apos;{{ theme.valine.guest_info }}&apos;; guest = guest.split(&apos;,&apos;).filter(function (item) { return GUEST.indexOf(item)&gt;-1; }); new Valine({ el: &apos;#comments&apos; , verify: {{ theme.valine.verify }}, notify: {{ theme.valine.notify }}, appId: &apos;{{ theme.valine.appid }}&apos;, appKey: &apos;{{ theme.valine.appkey }}&apos;, placeholder: &apos;{{ theme.valine.placeholder }}&apos;, avatar:&apos;{{ theme.valine.avatar }}&apos;, guest_info:[&apos;nick&apos;] , //评论者只需要提供评论的昵称即可 pageSize:&apos;{{ theme.valine.pageSize }}&apos; || 10, }); //增加以下六行代码去除 power by valine var infoEle = document.querySelector(&apos;#comments .info&apos;); if (infoEle &amp;&amp; infoEle.childNodes &amp;&amp; infoEle.childNodes.length &gt; 0){ infoEle.childNodes.forEach(function(item) { item.parentNode.removeChild(item); }); } &lt;/script&gt; {% endif %}12345678910111213141516- 修改主题配置文件_config.yml # valine: enable: true //打开valine评论功能 appid: 你的leancloud appid appkey: 你的leancloud appkey notify: false //邮件提醒 verify: true //评论时是否有验证码，需要在Leancloud 设置-&gt;安全中心 中打开 placeholder: 说点什么吧！ //评论框默认显示 avatar: hide //评论者的头像,我这里设置的不显示 guest_info: nick # custom comment header pageSize: 10 # pagination size 实现效果如下↓↓↓]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>评论实现</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为github pages博客添加域名]]></title>
    <url>%2F2019%2F04%2F17%2F%E5%9F%9F%E5%90%8D%2F</url>
    <content type="text"><![CDATA[首先将本地的博客项目上传至托管平台 github gitee 服务器 …… 笔者将博客项目上传至github上项目仓库地址 https://silly-bird.github. https://www.ljcn.xyz 当然，绑定域名之后，输入https://silly-bird.github之后访问的也是https://www.ljcn.xyz 博客的创建的过程网上有很多的教程，可谓是五花八门，笔者提示一点注意版本问题意思是：有些命令或者配置参数有可能发生变更，如果有什么问题可以给我留言，我尽可能帮助！ 域名绑定我也是当时碰到腾讯做活动，买了一个域名，主要是想尝试一下绑定域名的整个过程 购买域名 实名认证（时间不是很久） 解析域名： 记录类型：CNAME 主机记录：www 记录值：填上你代码的托管地址，例如：silly-bird.github.io 记录类型（A、 MX、 TXT等等）和主机记录说明（@、 *、 mail等等） 添加CNAME文件添加路径：博客文件的source下，例如： 内容为购买的域名，例如：www.ljcn.xyz 最后最后，提交更新到托管平台]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>Markdown</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[编辑好手-Markdown]]></title>
    <url>%2F2019%2F04%2F12%2Fmarkdown%E4%B8%8A%E6%89%8B%2F</url>
    <content type="text"><![CDATA[下载地址 激活——进入enter key 邮箱地址：Soar360@live.com 激活码：GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==【报错】缺少插件插件下载下载安装该插件修改语言工具-&gt;选项-&gt;语言关于图片插入问题 Markdown点击插入图片无法显示（或无法正常显示） 使用图床，将本地图片上传 类似的工具软件有： MPic 七牛云 PicGo SM.MS（笔者正在用的这个，简单高效）SM.MS地址 The End]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[本地web项目，通过内网穿透，实现公网访问]]></title>
    <url>%2F2019%2F04%2F07%2F%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%2F</url>
    <content type="text"><![CDATA[什么是内网穿透？内网穿透即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口,能让外网的电脑找到处于内网的电脑,提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。NAT穿透，nat穿透中有关于网络穿透的详细信息。 内网穿透工具有哪些？ Ngrok Sunny-Ngrok Frp 花生壳 …… 将基于hexo搭建的博客实现内网穿透（Sunny-Ngrok实现）点我进入Sunny-Ngrok 未完待续———————————————————————————————————————————— 我的另一篇博客有详细的说明，欢迎访问！]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>windows</tag>
      </tags>
  </entry>
</search>
